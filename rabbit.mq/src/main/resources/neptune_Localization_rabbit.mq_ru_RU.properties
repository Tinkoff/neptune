#Values for translation of steps, their parameters, matchers and their descriptions, and attachments are defined here. Format key = value

#============================================ STEPS ============================================ 

######################## rabbit.mq.function.bind.exchange.RabbitMqExchangeBindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Bind:
rabbit.mq.function.bind.exchange.RabbitMqExchangeBindSupplier.imperative = Связать:
#__________________________________ Methods _______________________________________
#Original text = exchange to an exchange.
#Params:
#{destination} – the name of the exchange to which messages flow across the binding
#{source} – the name of the exchange from which messages flow across the binding
#{routingKey} – the routing key to use for the binding
rabbit.mq.function.bind.exchange.RabbitMqExchangeBindSupplier.exchangeBind(java.lang.String,java.lang.String,java.lang.String) = exchange с exchange.\r\n\
Параметры:\r\n\
{destination} – имя exchange, к которому сообщения передаются через привязку\r\n\
{source} – имя exchange, сообщения от которого проходят через привязку\r\n\
{routingKey} – routing key, который используется для связывания

######################## rabbit.mq.function.bind.queue.RabbitMqQueueBindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Bind:
rabbit.mq.function.bind.queue.RabbitMqQueueBindSupplier.imperative = Связать:
#__________________________________ Methods _______________________________________
#Original text = queue to exchange.
#Params:
#queue – {queue}
#exchange – {exchange}
#routingKey – {routingKey}
rabbit.mq.function.bind.queue.RabbitMqQueueBindSupplier.queueBind(java.lang.String,java.lang.String,java.lang.String) = queue с exchange.\r\n\
Параметры:\r\n\
queue – {queue}\r\n\
exchange – {exchange}\r\n\
routingKey – {routingKey}

######################## rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier #
#_________________________________Parameters_____________________________________
#Original text = Declare:
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.imperative = Объявить:
#__________________________________ Methods _______________________________________
#Original text = exchange '{exchange}' with type '{type}'. Non-autodelete, non-durable and no extra arguments.
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.exchangeDeclare(java.lang.String,java.lang.String) = exchange '{exchange}' с типом '{type}'. Non-autodelete, non-durable и без дополнительных аргументов.
#Original text = exchange '{exchange}' with type '{type}' and  arguments.
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.exchangeDeclare(java.lang.String,java.lang.String,rabbit.mq.function.declare.exchange.ParametersForDeclareExchange) = exchange '{exchange}' с типом '{type}' и дополнительными аргументами.
#Original text = exchange '{exchange}' passively.
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.exchangeDeclarePassive(java.lang.String) = exchange '{exchange}' пассивно.

######################## rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier #
#_________________________________Parameters_____________________________________
#Original text = Declare:
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.imperative = Объявить:
#__________________________________ Methods _______________________________________
#Original text = server-named exclusive, autodelete, non-durable queue.
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.queueDeclare() = exclusive, autodelete, non-durable очередь.
#Original text = queue - {queue}
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.queueDeclare(java.lang.String,rabbit.mq.function.declare.queue.ParametersForDeclareQueue) = очередь - {queue}
#Original text = queue {queue} passively.
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.queueDeclarePassive(java.lang.String) = пассивно очередь {queue}.

######################## rabbit.mq.function.delete.exchange.RabbitMqExchangeDeleteSupplier #
#_________________________________Parameters_____________________________________
#Original text = Delete:
rabbit.mq.function.delete.exchange.RabbitMqExchangeDeleteSupplier.imperative = Удалить:
#__________________________________ Methods _______________________________________
#Original text = exchange '{exchange}' with ifUnused = '{ifUnused}'
rabbit.mq.function.delete.exchange.RabbitMqExchangeDeleteSupplier.exchangeDelete(java.lang.String,boolean) = exchange '{exchange}' со значением ifUnused = '{ifUnused}'

######################## rabbit.mq.function.delete.queue.RabbitMqQueueDeleteSupplier #
#_________________________________Parameters_____________________________________
#Original text = Delete:
rabbit.mq.function.delete.queue.RabbitMqQueueDeleteSupplier.imperative = Удалить:
#__________________________________ Methods _______________________________________
#Original text = queue - '{queue}'
rabbit.mq.function.delete.queue.RabbitMqQueueDeleteSupplier.deleteQueue(java.lang.String) = очередь - '{queue}'

######################## rabbit.mq.function.get.RabbitMqBasicGetArrayItemSupplier #
#_________________________________Parameters_____________________________________
#Original text = Retrieve:
rabbit.mq.function.get.RabbitMqBasicGetArrayItemSupplier.imperative = Получить:
#Original text = Time of the waiting
rabbit.mq.function.get.RabbitMqBasicGetArrayItemSupplier.timeOut = Время ожидания
#Original text = Object criteria
rabbit.mq.function.get.RabbitMqBasicGetArrayItemSupplier.criteria = Критерий ожидаемого результата
#__________________________________ Methods _______________________________________
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetArrayItemSupplier.rabbitArray(java.lang.String,java.lang.String,boolean,java.lang.Class<M>,java.util.function.Function<M,T[]>) = {description}
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetArrayItemSupplier.rabbitArray(java.lang.String,java.lang.String,boolean,core.api.data.format.TypeRef<M>,java.util.function.Function<M,T[]>) = {description}

######################## rabbit.mq.function.get.RabbitMqBasicGetArraySupplier #
#_________________________________Parameters_____________________________________
#Original text = Retrieve:
rabbit.mq.function.get.RabbitMqBasicGetArraySupplier.imperative = Получить:
#Original text = Time of the waiting
rabbit.mq.function.get.RabbitMqBasicGetArraySupplier.timeOut = Время ожидания
#Original text = Criteria for every item of resulted array
rabbit.mq.function.get.RabbitMqBasicGetArraySupplier.criteria = Критерий для каждого элемента получаемого массива
#__________________________________ Methods _______________________________________
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetArraySupplier.rabbitArray(java.lang.String,java.lang.String,boolean,java.lang.Class<M>,java.util.function.Function<M,T[]>) = {description}
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetArraySupplier.rabbitArray(java.lang.String,java.lang.String,boolean,core.api.data.format.TypeRef<M>,java.util.function.Function<M,T[]>) = {description}

######################## rabbit.mq.function.get.RabbitMqBasicGetIterableItemSupplier #
#_________________________________Parameters_____________________________________
#Original text = Retrieve:
rabbit.mq.function.get.RabbitMqBasicGetIterableItemSupplier.imperative = Получить:
#Original text = Time of the waiting
rabbit.mq.function.get.RabbitMqBasicGetIterableItemSupplier.timeOut = Время ожидания
#Original text = Object criteria
rabbit.mq.function.get.RabbitMqBasicGetIterableItemSupplier.criteria = Критерий ожидаемого результата
#__________________________________ Methods _______________________________________
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetIterableItemSupplier.rabbitIterable(java.lang.String,java.lang.String,boolean,java.lang.Class<M>,java.util.function.Function<M,S>) = {description}
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetIterableItemSupplier.rabbitIterable(java.lang.String,java.lang.String,boolean,core.api.data.format.TypeRef<M>,java.util.function.Function<M,S>) = {description}

######################## rabbit.mq.function.get.RabbitMqBasicGetIterableSupplier #
#_________________________________Parameters_____________________________________
#Original text = Retrieve:
rabbit.mq.function.get.RabbitMqBasicGetIterableSupplier.imperative = Получить:
#Original text = Time of the waiting
rabbit.mq.function.get.RabbitMqBasicGetIterableSupplier.timeOut = Время ожидания
#Original text = Criteria for every item of resulted iterable
rabbit.mq.function.get.RabbitMqBasicGetIterableSupplier.criteria = Критерий для каждого элемента получаемого набора
#__________________________________ Methods _______________________________________
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetIterableSupplier.rabbitIterable(java.lang.String,java.lang.String,boolean,java.lang.Class<M>,java.util.function.Function<M,S>) = {description}
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetIterableSupplier.rabbitIterable(java.lang.String,java.lang.String,boolean,core.api.data.format.TypeRef<M>,java.util.function.Function<M,S>) = {description}

######################## rabbit.mq.function.get.RabbitMqBasicGetSupplier #
#_________________________________Parameters_____________________________________
#Original text = Retrieve:
rabbit.mq.function.get.RabbitMqBasicGetSupplier.imperative = Получить:
#Original text = Time of the waiting
rabbit.mq.function.get.RabbitMqBasicGetSupplier.timeOut = Время ожидания
#Original text = Object criteria
rabbit.mq.function.get.RabbitMqBasicGetSupplier.criteria = Критерий ожидаемого результата
#__________________________________ Methods _______________________________________
#Original text = Message body
rabbit.mq.function.get.RabbitMqBasicGetSupplier.rabbitBody(java.lang.String,boolean,java.lang.Class<T>) = Тело сообщения
#Original text = Message body
rabbit.mq.function.get.RabbitMqBasicGetSupplier.rabbitBody(java.lang.String,boolean,core.api.data.format.TypeRef<T>) = Тело сообщения
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetSupplier.rabbitObject(java.lang.String,java.lang.String,boolean,java.lang.Class<M>,java.util.function.Function<M,T>) = {description}
#Original text = {description}
rabbit.mq.function.get.RabbitMqBasicGetSupplier.rabbitObject(java.lang.String,java.lang.String,boolean,core.api.data.format.TypeRef<M>,java.util.function.Function<M,T>) = {description}

######################## rabbit.mq.function.publish.RabbitMqPublishSupplier #
#_________________________________Parameters_____________________________________
#Original text = Publish:
rabbit.mq.function.publish.RabbitMqPublishSupplier.imperative = Опубликовать:
#__________________________________ Methods _______________________________________
#Original text = message.
#Params:
#exchange – {exchange}
#routingKey – {routingKey}
rabbit.mq.function.publish.RabbitMqPublishSupplier.publish(java.lang.String,java.lang.String,java.lang.Object,core.api.data.format.DataTransformer) = message.\r\n\
Params:\r\n\
exchange – {exchange}\r\n\
routingKey – {routingKey}

######################## rabbit.mq.function.purge.RabbitMqPurgeQueueSupplier #
#Original text = Purge the contents of the queue - {queue}.
rabbit.mq.function.purge.RabbitMqPurgeQueueSupplier = Очистить содержимое очереди {queue}.

######################## rabbit.mq.function.unbind.exchange.RabbitMqExchangeUnbindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Unbind:
rabbit.mq.function.unbind.exchange.RabbitMqExchangeUnbindSupplier.imperative = Отвязать:
#__________________________________ Methods _______________________________________
#Original text = an exchange from an exchange, with no extra arguments.
#Params:
#{destination} – the name of the exchange to which messages flow across the binding
#{source} – the name of the exchange from which messages flow across the binding
#{routingKey} – the routing key to use for the binding
rabbit.mq.function.unbind.exchange.RabbitMqExchangeUnbindSupplier.exchangeUnbind(java.lang.String,java.lang.String,java.lang.String) = exchange от exchange без лишних аргументов.\r\n\
Параметры:\r\n\
{destination} – имя exchange, к которому сообщения передаются через привязку\r\n\
{source} – имя exchange, сообщения от которого проходят через привязку\r\n\
{routingKey} – routing key, который используется для связывания

######################## rabbit.mq.function.unbind.queue.RabbitMqQueueUnbindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Unbind:
rabbit.mq.function.unbind.queue.RabbitMqQueueUnbindSupplier.imperative = Отвязать:
#__________________________________ Methods _______________________________________
#Original text = a queue from an exchange, with no extra arguments.
#Params:
#queue – {queue}
#exchange – {exchange}
#routingKey – {routingKey}
rabbit.mq.function.unbind.queue.RabbitMqQueueUnbindSupplier.queueUnbind(java.lang.String,java.lang.String,java.lang.String) = a очередь от exchange, без лишних аргументов.\r\n\
Параметры:\r\n\
очередь – {queue}\r\n\
exchange – {exchange}\r\n\
routingKey – {routingKey}

#============================================ PARAMETER WRAPPERS ============================================ 

######################## rabbit.mq.function.declare.exchange.ParametersForDeclareExchange #
#_________________________________Parameters_____________________________________
#Original text = durable
rabbit.mq.function.declare.exchange.ParametersForDeclareExchange.durable = durable
#Original text = autoDelete
rabbit.mq.function.declare.exchange.ParametersForDeclareExchange.autoDelete = autoDelete
#Original text = internal
rabbit.mq.function.declare.exchange.ParametersForDeclareExchange.internal = internal

######################## rabbit.mq.function.declare.queue.ParametersForDeclareQueue #
#_________________________________Parameters_____________________________________
#Original text = durable
rabbit.mq.function.declare.queue.ParametersForDeclareQueue.durable = durable
#Original text = exclusive
rabbit.mq.function.declare.queue.ParametersForDeclareQueue.exclusive = exclusive
#Original text = autoDelete
rabbit.mq.function.declare.queue.ParametersForDeclareQueue.autoDelete = autoDelete

######################## rabbit.mq.function.delete.queue.ParametersForDelete #
#_________________________________Parameters_____________________________________
#Original text = ifUnused
rabbit.mq.function.delete.queue.ParametersForDelete.ifUnused = ifUnused
#Original text = ifEmpty
rabbit.mq.function.delete.queue.ParametersForDelete.ifEmpty = ifEmpty

######################## rabbit.mq.function.get.GetFromQueue #
#_________________________________Parameters_____________________________________
#Original text = queue
rabbit.mq.function.get.GetFromQueue.queue = очередь
#Original text = autoAck
rabbit.mq.function.get.GetFromQueue.autoAck = autoAck
#Original text = Class to deserialize to
rabbit.mq.function.get.GetFromQueue.cls = Класс значения, в которое де-сериализовать тело сообщения
#Original text = Type to deserialize to
rabbit.mq.function.get.GetFromQueue.typeRef = Тип значения, в которое де-сериализовать тело сообщения

######################## rabbit.mq.function.publish.ParametersForPublish #
#_________________________________Parameters_____________________________________
#Original text = mandatory
rabbit.mq.function.publish.ParametersForPublish.mandatory = mandatory
#Original text = immediate
rabbit.mq.function.publish.ParametersForPublish.immediate = immediate