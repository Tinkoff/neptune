#Values for translation of steps, their parameters, matchers and their descriptions, and attachments are defined here. Format key = value
#============================================ STEPS ============================================
######################## rabbit.mq.function.bind.exchange.RabbitMqExchangeBindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Bind:
rabbit.mq.function.bind.exchange.RabbitMqExchangeBindSupplier.imperative=Связать:
#__________________________________ Methods _______________________________________
#Original text = exchange to an exchange.
#Params:
#{destination} – the name of the exchange to which messages flow across the binding
#{source} – the name of the exchange from which messages flow across the binding
#{routingKey} – the routing key to use for the binding
rabbit.mq.function.bind.exchange.RabbitMqExchangeBindSupplier.exchangeBind(java.lang.String,java.lang.String,java.lang.String)=exchange с exchange.\r\n\
Параметры:\r\n\
{destination} – имя exchange, к которому сообщения передаются через привязку\r\n\
{source} – имя exchange, сообщения от которого проходят через привязку\r\n\
{routingKey} – routing key, который используется для связывания

######################## rabbit.mq.function.bind.queue.RabbitMqQueueBindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Bind:
rabbit.mq.function.bind.queue.RabbitMqQueueBindSupplier.imperative=Связать:
#__________________________________ Methods _______________________________________
#Original text = queue to exchange.
#Params:
#queue – {queue}
#exchange – {exchange}
#routingKey – {routingKey}
rabbit.mq.function.bind.queue.RabbitMqQueueBindSupplier.queueBind(java.lang.String,java.lang.String,java.lang.String)=queue с exchange.\r\n\
Параметры:\r\n\
queue – {queue}\r\n\
exchange – {exchange}\r\n\
routingKey – {routingKey}
######################## rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier #
#_________________________________Parameters_____________________________________
#Original text = Declare:
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.imperative=Объявить:
#__________________________________ Methods _______________________________________
#Original text = exchange '{exchange}' with type '{type}'. Non-autodelete, non-durable and no extra arguments.
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.exchangeDeclare(java.lang.String,java.lang.String)=exchange '{exchange}' с типом '{type}'. Non-autodelete, non-durable и без дополнительных аргументов.
#Original text = exchange '{exchange}' with type '{type}' and  arguments.
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.exchangeDeclare(java.lang.String,java.lang.String,rabbit.mq.function.declare.exchange.ParametersForDeclareExchange)=exchange '{exchange}' с типом '{type}' и дополнительными аргументами.
#Original text = exchange '{exchange}' passively.
rabbit.mq.function.declare.exchange.RabbitMqExchangeDeclareSupplier.exchangeDeclarePassive(java.lang.String)=exchange '{exchange}' пассивно.
######################## rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier #
#_________________________________Parameters_____________________________________
#Original text = Declare:
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.imperative=Объявить:
#__________________________________ Methods _______________________________________
#Original text = server-named exclusive, autodelete, non-durable queue.
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.queueDeclare()=exclusive, autodelete, non-durable очередь.
#Original text = queue - {queue}
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.queueDeclare(java.lang.String,rabbit.mq.function.declare.queue.ParametersForDeclareQueue)=очередь - {queue}
#Original text = queue {queue} passively.
rabbit.mq.function.declare.queue.RabbitMqQueueDeclareSupplier.queueDeclarePassive(java.lang.String)=пассивно очередь {queue}.
######################## rabbit.mq.function.delete.exchange.RabbitMqExchangeDeleteSupplier #
#_________________________________Parameters_____________________________________
#Original text = Delete:
rabbit.mq.function.delete.exchange.RabbitMqExchangeDeleteSupplier.imperative=Удалить:
#__________________________________ Methods _______________________________________
#Original text = exchange '{exchange}' with ifUnused = '{ifUnused}'
rabbit.mq.function.delete.exchange.RabbitMqExchangeDeleteSupplier.exchangeDelete(java.lang.String,boolean)=exchange '{exchange}' со значением ifUnused = '{ifUnused}'
######################## rabbit.mq.function.delete.queue.RabbitMqQueueDeleteSupplier #
#_________________________________Parameters_____________________________________
#Original text = Delete:
rabbit.mq.function.delete.queue.RabbitMqQueueDeleteSupplier.imperative=Удалить:
#__________________________________ Methods _______________________________________
#Original text = queue - '{queue}'
rabbit.mq.function.delete.queue.RabbitMqQueueDeleteSupplier.deleteQueue(java.lang.String)=очередь - '{queue}'
######################## rabbit.mq.function.get.RabbitMqBasicGetSupplier #
#_________________________________Parameters_____________________________________
#Original text = Retrieve:
rabbit.mq.function.get.RabbitMqBasicGetSupplier.imperative=Получить:
#Original text = Time of the waiting for messages
rabbit.mq.function.get.RabbitMqBasicGetSupplier.timeOut=Время ожидания сообщения
#Original text = Message criteria
rabbit.mq.function.get.RabbitMqBasicGetSupplier.criteria=Критерий для поиска сообщения
#__________________________________ Methods _______________________________________
#Original text = message from a queue using AMQP.Basic.Get
#Params:
#queue – {queue}
#autoAck - {autoAck}
rabbit.mq.function.get.RabbitMqBasicGetSupplier.valueOf(java.lang.String,boolean,java.lang.Class<T>)=получить сообщение из очереди, используя AMQP.Basic.Get\r\n\
Параметры:\r\n\
очередь – {queue}\r\n\
autoAck - {autoAck}

######################## rabbit.mq.function.publish.RabbitMqPublishSupplier #
#_________________________________Parameters_____________________________________
#Original text = Publish:
rabbit.mq.function.publish.RabbitMqPublishSupplier.imperative=Опубликовать:
#__________________________________ Methods _______________________________________
#Original text = message.
#Params:
#exchange – {exchange}
#routingKey – {routingKey}
rabbit.mq.function.publish.RabbitMqPublishSupplier.publish(java.lang.String,java.lang.String,java.lang.Object,rabbit.mq.properties.RabbitMqMapper)=сообщение.\r\n\
Параметры:\r\n\
exchange – {exchange}\r\n\
routingKey – {routingKey}
######################## rabbit.mq.function.purge.RabbitMqPurgeQueueSupplier #
#Original text = Purge the contents of the queue - {queue}.
rabbit.mq.function.purge.RabbitMqPurgeQueueSupplier=Очистить содержимое очереди {queue}.
######################## rabbit.mq.function.unbind.exchange.RabbitMqExchangeUnbindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Unbind:
rabbit.mq.function.unbind.exchange.RabbitMqExchangeUnbindSupplier.imperative=Отвязать:
#__________________________________ Methods _______________________________________
#Original text = an exchange from an exchange, with no extra arguments.
#Params:
#{destination} – the name of the exchange to which messages flow across the binding
#{source} – the name of the exchange from which messages flow across the binding
#{routingKey} – the routing key to use for the binding
rabbit.mq.function.unbind.exchange.RabbitMqExchangeUnbindSupplier.exchangeUnbind(java.lang.String,java.lang.String,java.lang.String)=exchange от exchange без лишних аргументов.\r\n\
Параметры:\r\n\
{destination} – имя exchange, к которому сообщения передаются через привязку\r\n\
{source} – имя exchange, сообщения от которого проходят через привязку\r\n\
{routingKey} – routing key, который используется для связывания

######################## rabbit.mq.function.unbind.queue.RabbitMqQueueUnbindSupplier #
#_________________________________Parameters_____________________________________
#Original text = Unbind:
rabbit.mq.function.unbind.queue.RabbitMqQueueUnbindSupplier.imperative=Отвязать:
#__________________________________ Methods _______________________________________
#Original text = a queue from an exchange, with no extra arguments.
#Params:
#queue – {queue}
#exchange – {exchange}
#routingKey – {routingKey}
rabbit.mq.function.unbind.queue.RabbitMqQueueUnbindSupplier.queueUnbind(java.lang.String,java.lang.String,java.lang.String)=a очередь от exchange, без лишних аргументов.\r\n\
Параметры:\r\n\
очередь – {queue}\r\n\
exchange – {exchange}\r\n\
routingKey – {routingKey}