plugins {
    id "io.freefair.aspectj.post-compile-weaving" version "5.3.3.3"
}

dependencies {
    compile project(':core.api')
    inpath(project(":core.api")) {
        transitive = false
    }
    compile group: 'org.datanucleus', name: 'datanucleus-rdbms', version: '5.2.8'
    compile group: 'org.datanucleus', name: 'datanucleus-jdo-query', version: '5.0.9'
    compile group: 'org.datanucleus', name: 'datanucleus-api-jdo', version: '5.2.7'
    compile group: 'org.datanucleus', name: 'datanucleus-core', version: '5.2.8'
    compile group: 'org.datanucleus', name: 'javax.jdo', version: '3.2.0-m13'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compile group: 'org.apache.ant', name: 'ant', version: '1.10.9'
    testCompile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.34.0'
    testAnnotationProcessor 'org.datanucleus:datanucleus-jdo-query:5.0.9'
    testAnnotationProcessor group: 'org.datanucleus', name: 'javax.jdo', version: '3.2.0-m13'
}

task enhanceJdoEntities(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'ru.tinkoff.qa.neptune.data.base.api.PersistableEnhancer'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    doLast {
        generateBundle.exec()
    }
}

task generateBundle(type: JavaExec)  {
    classpath sourceSets.main.runtimeClasspath
    main = "ru.tinkoff.qa.neptune.core.api.localization.ResourceBundleGenerator"
    args "ru_RU",
            "$projectDir/src/main/resources",
            "false",
            "data.base"
}

compileTestJava {
    doLast {
        enhanceJdoEntities.exec()
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://nexus-new.tcsbank.ru/repository/mvn-bigops-qa') {
                authentication(userName: mavenDeployLogin, password: mavenDeployPassword)
            }


            pom.project {
                packaging 'jar'
                name 'data.base.api'
                version version
                url 'https://github.com/TinkoffCreditSystems/neptune'
                developers {
                    developer {
                        name 'Sergey Tikhomirov'
                        email 'tichomirovsergey@gmail.com'
                        url 'https://github.com/TikhomirovSergey'
                        id 'TikhomirovSergey'
                    }
                }
                licenses {
                    license {
                        name 'Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                scm {
                    url 'https://github.com/TinkoffCreditSystems/neptune'
                    connection 'scm:git:ssh://git@github.com:TinkoffCreditSystems/neptune.git'
                    developerConnection 'scm:git:ssh://git@github.com:TinkoffCreditSystems/neptune.git'
                    tag 'HEAD'
                }
            }
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

javadoc {
    destinationDir = file("${buildDir}/../../../neptune.documentation/javadocs/$project.name")

    title = "Neptune Data Base Integration API. v$globalVersion"
    options.author true
    options.links 'http://download.oracle.com/javase/9/docs/api/'
    options.addStringOption 'Xdoclint:none', '-quiet'
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.bottom = "Copyright &copy; 2021 <a href=\"https://www.tinkoff.ru/software/\">Tinkoff.ru Development</a>."
}
