#Values for translation of steps, their parameters, matchers and their descriptions, and attachments are defined here. Format key = value

#============================================ STEPS ============================================ 

######################## data.base.api.data.operations.DataOperation #
#_________________________________Parameters_____________________________________
#Original text = Perform in database:
data.base.api.data.operations.DataOperation.imperative = В базе данных:
#__________________________________ Methods _______________________________________
#Original text = Delete records from {from}
data.base.api.data.operations.DataOperation.deleted(java.util.Collection<T>) = Удалить записи из {from}
#Original text = Delete {toDelete}
data.base.api.data.operations.DataOperation.deleted(data.base.api.queries.SelectASingle<T>) = Удалить {toDelete}
#Original text = Delete {toDelete}
data.base.api.data.operations.DataOperation.deleted(data.base.api.queries.SelectList<?,java.util.List<T>>) = Удалить {toDelete}
#Original text = Insert new records to {to}
data.base.api.data.operations.DataOperation.inserted(java.util.Collection<T>) = Добавит новые записи в {to}
#Original text = Update records of {of}
data.base.api.data.operations.DataOperation.updated(java.util.Collection<T>,data.base.api.data.operations.UpdateExpression<T>[]) = Обновить/изменить записи {of}
#Original text = Update {toUpdate}
data.base.api.data.operations.DataOperation.updated(data.base.api.queries.SelectASingle<T>,data.base.api.data.operations.UpdateExpression<T>[]) = Обновить/изменить {toUpdate}
#Original text = Update {toUpdate}
data.base.api.data.operations.DataOperation.updated(data.base.api.queries.SelectList<?,java.util.List<T>>,data.base.api.data.operations.UpdateExpression<T>[]) = Обновить/изменить {toUpdate}

######################## data.base.api.data.operations.DeleteOperation$DeleteSelected #
#_________________________________Parameters_____________________________________
#Original text = To be deleted
data.base.api.data.operations.DeleteOperation$DeleteSelected.toDelete = Записи, которые надо удалить

######################## data.base.api.data.operations.InsertOperation #
#_________________________________Parameters_____________________________________
#Original text = To be inserted
data.base.api.data.operations.InsertOperation.toInsert = Записи, которые надо добавить

######################## data.base.api.data.operations.UpdateOperation$UpdateSelected #
#_________________________________Parameters_____________________________________
#Original text = To be updated
data.base.api.data.operations.UpdateOperation$UpdateSelected.toUpdate = Записи, которые надо обновить/изменить

######################## data.base.api.queries.SelectASingle #
#_________________________________Parameters_____________________________________
#Original text = Select from data base:
data.base.api.queries.SelectASingle.imperative = Из базы данных выбрать:
#Original text = Time to select object
data.base.api.queries.SelectASingle.timeOut = Время, за которое надо получить нужную запись
#Original text = Record criteria
data.base.api.queries.SelectASingle.criteria = Критерий для выбранной записи
#Original text = Not selected:
data.base.api.queries.SelectASingle.errorMessageStartingOnEmptyResult = Не выбрано/не найдено:
#Original text = By query
data.base.api.queries.SelectASingle.query = Запрос
#__________________________________ Methods _______________________________________
#Original text = one record of '{of}'
data.base.api.queries.SelectASingle.oneOf(java.lang.Class<R>,java.lang.String,java.lang.Object[]) = запись '{of}'
#Original text = one record of '{of}'
data.base.api.queries.SelectASingle.oneOf(java.lang.Class<R>,java.lang.String,java.util.Map<java.lang.String,?>) = запись '{of}'
#Original text = one record of '{of}' by id {id}
data.base.api.queries.SelectASingle.oneOf(java.lang.Class<R>,data.base.api.queries.ids.Id) = запись '{of}' по Id={id}
#Original text = one record of '{of}'
data.base.api.queries.SelectASingle.oneOf(java.lang.Class<R>,data.base.api.queries.jdoql.JDOQLQueryParameters<R,Q>) = запись '{of}'
#Original text = the row of raw data from '{of}'
data.base.api.queries.SelectASingle.row(java.lang.Class<R>,data.base.api.queries.jdoql.JDOQLResultQueryParams<R,Q>) = данные из таблицы '{of}'
#Original text = the row of raw data from '{of}'
data.base.api.queries.SelectASingle.row(java.lang.String,java.lang.Class<R>,java.lang.Object[]) = данные из таблицы '{of}'
#Original text = the row of raw data from '{of}'
data.base.api.queries.SelectASingle.row(java.lang.String,java.lang.Class<R>,java.util.Map<java.lang.String,?>) = данные из таблицы '{of}'

######################## data.base.api.queries.SelectList #
#_________________________________Parameters_____________________________________
#Original text = Select from data base:
data.base.api.queries.SelectList.imperative = Из базы данных выбрать:
#Original text = Time to select objects
data.base.api.queries.SelectList.timeOut = Время, за которое надо получить нужные записи
#Original text = Record criteria
data.base.api.queries.SelectList.criteria = Критерий для каждой выбранной записи
#Original text = Not selected:
data.base.api.queries.SelectList.errorMessageStartingOnEmptyResult = Не выбраны/не найдены:
#Original text = By query
data.base.api.queries.SelectList.query = Запрос
#__________________________________ Methods _______________________________________
#Original text = records of '{of}'
data.base.api.queries.SelectList.listOf(java.lang.Class<R>,java.lang.String,java.lang.Object[]) = записи '{of}'
#Original text = records of '{of}'
data.base.api.queries.SelectList.listOf(java.lang.Class<R>,java.lang.String,java.util.Map<java.lang.String,?>) = записи '{of}'
#Original text = records of '{of}' by ids {ids}
data.base.api.queries.SelectList.listOf(java.lang.Class<R>,data.base.api.queries.ids.Ids) = записи '{of}' по Id={ids}
#Original text = records of '{of}'
data.base.api.queries.SelectList.listOf(java.lang.Class<R>,data.base.api.queries.jdoql.JDOQLQueryParameters<R,Q>) = записи '{of}'
#Original text = rows of raw data from '{of}'
data.base.api.queries.SelectList.rows(java.lang.Class<R>,data.base.api.queries.jdoql.JDOQLResultQueryParams<R,Q>) = данные из таблицы '{of}'
#Original text = rows of raw data from '{of}'
data.base.api.queries.SelectList.rows(java.lang.String,java.lang.Class<R>,java.lang.Object[]) = данные из таблицы '{of}'
#Original text = rows of raw data from '{of}'
data.base.api.queries.SelectList.rows(java.lang.String,java.lang.Class<R>,java.util.Map<java.lang.String,?>) = данные из таблицы '{of}'

#============================================ ATTACHMENTS ============================================ 

######################## data.base.api.captors.DBObjectCaptor #
#Original text = Persistable DB object
data.base.api.captors.DBObjectCaptor = Запись базы данных

######################## data.base.api.captors.DBObjectsCaptor #
#Original text = Persistable DB objects
data.base.api.captors.DBObjectsCaptor = Записи базы данных