ext {
    globalVersion = '0.19.4-ALPHA'
}

subprojects {
    group 'ru.tinkoff.qa.neptune'
    version globalVersion

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'project-report'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    apply plugin: "java"

    repositories {
        maven {
            url "https://repo1.maven.org/maven2/"
        }
    }

    ext {
        testNGVersion = '7.4.0'
        hamcrestVersion = '2.2'
        seleniumVersion = '3.141.59'
        allureVersion = '2.14.0'
        jacksonVersion = '2.12.5'
        globalVersion = version
    }

    dependencies {
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
        implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
        testImplementation  group: 'org.testng', name: 'testng', version: testNGVersion
        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
        implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-jaxb-annotations', version: jacksonVersion
        implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: jacksonVersion
        implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'
        implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.8'
        implementation group: 'io.github.classgraph', name: 'classgraph', version: '4.8.115'
        implementation group: 'org.hamcrest', name: 'hamcrest', version: hamcrestVersion
    }

    test {
        useTestNG()

        testLogging {
            events "PASSED", "STARTED", "FAILED", "SKIPPED"
            exceptionFormat "full"
            showStackTraces true
        }
    }
}

task aggregatedJavadocs(type: Javadoc, description: 'Generate javadocs from all child projects as if it was a single project', group: 'Documentation') {
    title = "Neptune API Documentation. v$globalVersion"
    options.author true
    options.links 'http://download.oracle.com/javase/9/docs/api/'
    options.addStringOption 'Xdoclint:none', '-quiet'
    destinationDir  = file("${buildDir}/../../neptune.documentation/javadocs/")
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.bottom = "Copyright &copy; 2021 <a href=\"https://www.tinkoff.ru/software/\">Tinkoff.ru Development</a>."

    subprojects.each { proj ->
        proj.tasks.withType(Javadoc).each { javadocTask ->
            source += javadocTask.source
            classpath += javadocTask.classpath
            excludes += javadocTask.excludes
            includes += javadocTask.includes
        }
    }
}
