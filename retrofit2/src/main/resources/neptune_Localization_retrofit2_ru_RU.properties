#Values for translation of steps, their parameters, matchers and their descriptions, and attachments are defined here. Format key = value

#============================================ STEPS ============================================ 

######################## retrofit2.steps.GetArraySupplier #
#_________________________________Parameters_____________________________________
#Original text = Criteria of an item of resulted array
retrofit2.steps.GetArraySupplier.criteria = Критерий для каждого элемента, входящего в результат
#__________________________________ Methods _______________________________________
#Original text = {description}
retrofit2.steps.GetArraySupplier.array(java.lang.String,java.util.function.Supplier<M>,java.util.function.Function<M,R[]>) = {description}

######################## retrofit2.steps.GetIterableSupplier #
#_________________________________Parameters_____________________________________
#Original text = Criteria of an item of resulted iterable
retrofit2.steps.GetIterableSupplier.criteria = Критерий для каждого элемента, входящего в результат
#__________________________________ Methods _______________________________________
#Original text = {description}
retrofit2.steps.GetIterableSupplier.iterable(java.lang.String,java.util.function.Supplier<M>,java.util.function.Function<M,S>) = {description}

######################## retrofit2.steps.GetObjectFromArraySupplier #
#_________________________________Parameters_____________________________________
#Original text = Result criteria
retrofit2.steps.GetObjectFromArraySupplier.criteria = Критерий результата
#__________________________________ Methods _______________________________________
#Original text = {description}
retrofit2.steps.GetObjectFromArraySupplier.arrayItem(java.lang.String,java.util.function.Supplier<M>,java.util.function.Function<M,R[]>) = {description}

######################## retrofit2.steps.GetObjectFromIterableSupplier #
#_________________________________Parameters_____________________________________
#Original text = Result criteria
retrofit2.steps.GetObjectFromIterableSupplier.criteria = Критерий результата
#__________________________________ Methods _______________________________________
#Original text = {description}
retrofit2.steps.GetObjectFromIterableSupplier.iterableItem(java.lang.String,java.util.function.Supplier<M>,java.util.function.Function<M,S>) = {description}

######################## retrofit2.steps.GetObjectSupplier #
#_________________________________Parameters_____________________________________
#Original text = Result criteria
retrofit2.steps.GetObjectSupplier.criteria = Критерий результата
#__________________________________ Methods _______________________________________
#Original text = Response body
retrofit2.steps.GetObjectSupplier.body(java.util.function.Supplier<M>) = Тело ответа
#Original text = Response body
retrofit2.steps.GetObjectSupplier.callBody(java.util.function.Supplier<retrofit2.Call<M>>) = Тело ответа
#Original text = {description}
retrofit2.steps.GetObjectSupplier.object(java.lang.String,java.util.function.Supplier<M>,java.util.function.Function<M,R>) = {description}

######################## retrofit2.steps.SendRequestAndGet #
#Original text = Http response
retrofit2.steps.SendRequestAndGet = Http ответ
#_________________________________Parameters_____________________________________
#Original text = Time to receive expected http response and get the result
retrofit2.steps.SendRequestAndGet.timeOut = Время на отправку/повторную отправку http-запроса и получение требуемых данных
#Original text = Response criteria
retrofit2.steps.SendRequestAndGet.criteria = Критерий для http-ответа
#Original text = Not received
retrofit2.steps.SendRequestAndGet.errorMessageStartingOnEmptyResult = Не был получен

#============================================ CRITERIA ============================================ 

######################## retrofit2.criteria.ResponseCriteria #
#__________________________________ Methods _______________________________________
#Original text = Response URL {description} contains '{expression}' or meets regExp pattern '{expression}'
retrofit2.criteria.ResponseCriteria.urlPartRegExpCriteria(java.lang.String,java.lang.String,java.util.function.Function<java.net.URL,java.lang.String>) = {description} URL ответа содержит подстроку '{expression}' или соответствует регулярному выражению '{expression}'
#Original text = Response URL {description} is '{expected}'
retrofit2.criteria.ResponseCriteria.urlPartStringCriteria(java.lang.String,java.lang.String,java.util.function.Function<java.net.URL,java.lang.String>) = {description} URL ответа '{expected}'
#Original text = response has header '{name}' with value '{value}'
retrofit2.criteria.ResponseCriteria.headerValue(java.lang.String,java.lang.String) = http-ответ имеет заголовок '{name}' который содержит значение '{value}'
#Original text = response has header '{name}' with value contains/matches RegExp pattern '{valueExpression}'
retrofit2.criteria.ResponseCriteria.headerValueMatches(java.lang.String,java.lang.String) = http-ответ имеет заголовок '{name}' который содержит значение c подстрокой/соответствующее регулярному выражению '{valueExpression}'
#Original text = is redirect
retrofit2.criteria.ResponseCriteria.isRedirect() = Редирект
#Original text = is successful
retrofit2.criteria.ResponseCriteria.isSuccessful() = Успешный ответ
#Original text = Response message is '{expected}'
retrofit2.criteria.ResponseCriteria.message(java.lang.String) = Сообщение '{expected}'
#Original text = Response message contains '{expression}' or meets regExp pattern '{expression}'
retrofit2.criteria.ResponseCriteria.messageMatches(java.lang.String) = Сообщение содержит подстроку '{expression}' или соответствует регулярному выражению '{expression}'
#Original text = Has prior response
retrofit2.criteria.ResponseCriteria.priorResponse() = Есть предыдущий http-ответ
#Original text = Prior response: {criteria}
retrofit2.criteria.ResponseCriteria.priorResponse(core.api.steps.Criteria<okhttp3.Response>) = Предыдущий http-ответ: {criteria}
#Original text = Response URL port is '{port}'
retrofit2.criteria.ResponseCriteria.responseURLPort(int) = Порт URL ответа '{port}'
#Original text = response URL is '{stringURL}'
retrofit2.criteria.ResponseCriteria.responseUrl(java.lang.String) = URL ответа '{stringURL}'
#Original text = status code is {code}
retrofit2.criteria.ResponseCriteria.statusCode(int) = Статус {code}
#Original text = response URL contains '{expression}' or meets regExp pattern '{expression}'
retrofit2.criteria.ResponseCriteria.urlMatches(java.lang.String) = URL ответа содержит подстроку '{expression}' или соответствует регулярному выражению '{expression}'

######################## retrofit2.steps.ResultCriteria #
#__________________________________ Methods _______________________________________
#Original text = {description}
retrofit2.steps.ResultCriteria.bodyMatches(java.lang.String,java.util.function.Predicate<?superT>) = {description}

#============================================ ATTACHMENTS ============================================ 

######################## retrofit2.captors.AbstractRequestBodyCaptor #
#Original text = Request body
retrofit2.captors.AbstractRequestBodyCaptor = Тело запроса

######################## retrofit2.captors.ResponseBodyCaptor #
#Original text = Response body
retrofit2.captors.ResponseBodyCaptor = Тело ответа

######################## retrofit2.captors.ResponseCaptor #
#Original text = Response
retrofit2.captors.ResponseCaptor = Http ответ

#============================================ OTHER ============================================ 

######################## retrofit2.steps.BodyHasItems #
#Original text = Response body has items: {description}
retrofit2.steps.BodyHasItems = Тело Http ответа содержит объект(ы): {description}

######################## retrofit2.steps.BodyMatches #
#Original text = Response body: {description}
retrofit2.steps.BodyMatches = Тело Http ответа: {description}