#Values for translation of steps, their parameters, matchers and their descriptions, and attachments are defined here. Format key = value

#============================================ STEPS ============================================ 

######################## http.api.cookies.AddHttpCookiesActionSupplier #
#Original text = Add http cookies
http.api.cookies.AddHttpCookiesActionSupplier = Добавить http куки
#_________________________________Parameters_____________________________________
#Original text = Cookies to add
http.api.cookies.AddHttpCookiesActionSupplier.performOn = Куки, которые надо добавить
#Original text = Associate with URI
http.api.cookies.AddHttpCookiesActionSupplier.uri = привязать к URI

######################## http.api.cookies.DeleteHttpCookiesActionSupplier #
#Original text = Delete http cookies
http.api.cookies.DeleteHttpCookiesActionSupplier = Удалить http куки

######################## http.api.cookies.DeleteHttpCookiesActionSupplier$DeleteAllHttpCookies #
#Original text = Delete all http cookies
http.api.cookies.DeleteHttpCookiesActionSupplier$DeleteAllHttpCookies = Очистить http куки

######################## http.api.cookies.DeleteHttpCookiesActionSupplier$DeleteDefinedHttpCookies #
#_________________________________Parameters_____________________________________
#Original text = Http cookies to delete
http.api.cookies.DeleteHttpCookiesActionSupplier$DeleteDefinedHttpCookies.performOn = Куки, которые надо удалить

######################## http.api.cookies.GetHttpCookiesSupplier #
#Original text = Http cookies
http.api.cookies.GetHttpCookiesSupplier = Http куки
#_________________________________Parameters_____________________________________
#Original text = Http cookie criteria
http.api.cookies.GetHttpCookiesSupplier.criteria = Критерий, которому должна соответствовать каждая кука
#Original text = Associated with URI
http.api.cookies.GetHttpCookiesSupplier.uri = Связанные с URI

######################## http.api.response.GetObjectFromArrayBodyStepSupplier #
#_________________________________Parameters_____________________________________
#Original text = Criteria of a resulted value
http.api.response.GetObjectFromArrayBodyStepSupplier.criteria = Критерий результата
#Original text = No data received:
http.api.response.GetObjectFromArrayBodyStepSupplier.errorMessageStartingOnEmptyResult = Данные по http не были получены:
#__________________________________ Methods _______________________________________
#Original text = {description}
http.api.response.GetObjectFromArrayBodyStepSupplier.asOneOfArray(java.lang.String,java.net.http.HttpResponse<R[]>) = {description}
#Original text = {description}
http.api.response.GetObjectFromArrayBodyStepSupplier.asOneOfArray(java.lang.String,java.net.http.HttpResponse<T>,java.util.function.Function<T,R[]>) = {description}
#Original text = {description}
http.api.response.GetObjectFromArrayBodyStepSupplier.asOneOfArray(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<R[]>) = {description}
#Original text = {description}
http.api.response.GetObjectFromArrayBodyStepSupplier.asOneOfArray(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<T>,java.util.function.Function<T,R[]>) = {description}

######################## http.api.response.GetObjectFromArrayBodyStepSupplier$GetObjectFromArrayWhenResponseReceived #
#_________________________________Parameters_____________________________________
#Original text = From http response get:
http.api.response.GetObjectFromArrayBodyStepSupplier$GetObjectFromArrayWhenResponseReceived.imperative = От http-ответа на запрос получить:
#Original text = Http response to get data from
http.api.response.GetObjectFromArrayBodyStepSupplier$GetObjectFromArrayWhenResponseReceived.response = Http-ответ для получения данных

######################## http.api.response.GetObjectFromArrayBodyStepSupplier$GetObjectFromArrayWhenResponseReceiving #
#_________________________________Parameters_____________________________________
#Original text = Send http request. Wait for the response and then get:
http.api.response.GetObjectFromArrayBodyStepSupplier$GetObjectFromArrayWhenResponseReceiving.imperative = Отправить http-запрос. От http-ответа получить:
#Original text = Time to receive expected http response and get the result
http.api.response.GetObjectFromArrayBodyStepSupplier$GetObjectFromArrayWhenResponseReceiving.timeOut = Время на отправку/повторную отправку http-запроса и получение требуемых данных

######################## http.api.response.GetObjectFromBodyStepSupplier #
#_________________________________Parameters_____________________________________
#Original text = Criteria of a resulted value
http.api.response.GetObjectFromBodyStepSupplier.criteria = Критерий результата
#Original text = No data received:
http.api.response.GetObjectFromBodyStepSupplier.errorMessageStartingOnEmptyResult = Данные по http не были получены:
#__________________________________ Methods _______________________________________
#Original text = Body of http response
http.api.response.GetObjectFromBodyStepSupplier.asIs(java.net.http.HttpResponse<T>) = Тело ответа
#Original text = {description}
http.api.response.GetObjectFromBodyStepSupplier.asObject(java.lang.String,java.net.http.HttpResponse<T>,java.util.function.Function<T,R>) = {description}
#Original text = Body of http response
http.api.response.GetObjectFromBodyStepSupplier.asIs(http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<T>) = Тело ответа
#Original text = {description}
http.api.response.GetObjectFromBodyStepSupplier.asObject(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<T>,java.util.function.Function<T,R>) = {description}

######################## http.api.response.GetObjectFromBodyStepSupplier$GetObjectWhenResponseReceived #
#_________________________________Parameters_____________________________________
#Original text = From http response get:
http.api.response.GetObjectFromBodyStepSupplier$GetObjectWhenResponseReceived.imperative = От http-ответа на запрос получить:
#Original text = From body of received http response
http.api.response.GetObjectFromBodyStepSupplier$GetObjectWhenResponseReceived.response = Http-ответ для получения данных

######################## http.api.response.GetObjectFromBodyStepSupplier$GetObjectWhenResponseReceiving #
#_________________________________Parameters_____________________________________
#Original text = Send http request. Wait for the response and then get:
http.api.response.GetObjectFromBodyStepSupplier$GetObjectWhenResponseReceiving.imperative = Отправить http-запрос. От http-ответа получить:
#Original text = Time to receive expected http response and get the result
http.api.response.GetObjectFromBodyStepSupplier$GetObjectWhenResponseReceiving.timeOut = Время на отправку/повторную отправку http-запроса и получение требуемых данных

######################## http.api.response.GetObjectFromIterableBodyStepSupplier #
#_________________________________Parameters_____________________________________
#Original text = Criteria of a resulted value
http.api.response.GetObjectFromIterableBodyStepSupplier.criteria = Критерий результата
#Original text = No data received:
http.api.response.GetObjectFromIterableBodyStepSupplier.errorMessageStartingOnEmptyResult = Данные по http не были получены:
#__________________________________ Methods _______________________________________
#Original text = {description}
http.api.response.GetObjectFromIterableBodyStepSupplier.asOneOfIterable(java.lang.String,java.net.http.HttpResponse<S>) = {description}
#Original text = {description}
http.api.response.GetObjectFromIterableBodyStepSupplier.asOneOfIterable(java.lang.String,java.net.http.HttpResponse<T>,java.util.function.Function<T,S>) = {description}
#Original text = {description}
http.api.response.GetObjectFromIterableBodyStepSupplier.asOneOfIterable(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<S>) = {description}
#Original text = {description}
http.api.response.GetObjectFromIterableBodyStepSupplier.asOneOfIterable(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<T>,java.util.function.Function<T,S>) = {description}

######################## http.api.response.GetObjectFromIterableBodyStepSupplier$GetObjectFromIterableWhenResponseReceived #
#_________________________________Parameters_____________________________________
#Original text = From http response get:
http.api.response.GetObjectFromIterableBodyStepSupplier$GetObjectFromIterableWhenResponseReceived.imperative = От http-ответа на запрос получить:
#Original text = From body of received http response
http.api.response.GetObjectFromIterableBodyStepSupplier$GetObjectFromIterableWhenResponseReceived.response = Http-ответ для получения данных

######################## http.api.response.GetObjectFromIterableBodyStepSupplier$GetObjectFromIterableWhenResponseReceiving #
#_________________________________Parameters_____________________________________
#Original text = Send http request. Wait for the response and then get:
http.api.response.GetObjectFromIterableBodyStepSupplier$GetObjectFromIterableWhenResponseReceiving.imperative = Отправить http-запрос. От http-ответа получить:
#Original text = Time to receive expected http response and get the result
http.api.response.GetObjectFromIterableBodyStepSupplier$GetObjectFromIterableWhenResponseReceiving.timeOut = Время на отправку/повторную отправку http-запроса и получение требуемых данных

######################## http.api.response.GetObjectsFromArrayBodyStepSupplier #
#_________________________________Parameters_____________________________________
#Original text = Criteria of an item of resulted array
http.api.response.GetObjectsFromArrayBodyStepSupplier.criteria = Критерий для каждого элемента, входящего в результат
#Original text = No data received:
http.api.response.GetObjectsFromArrayBodyStepSupplier.errorMessageStartingOnEmptyResult = Данные по http не были получены:
#__________________________________ Methods _______________________________________
#Original text = {description}
http.api.response.GetObjectsFromArrayBodyStepSupplier.asArray(java.lang.String,java.net.http.HttpResponse<R[]>) = {description}
#Original text = {description}
http.api.response.GetObjectsFromArrayBodyStepSupplier.asArray(java.lang.String,java.net.http.HttpResponse<T>,java.util.function.Function<T,R[]>) = {description}
#Original text = {description}
http.api.response.GetObjectsFromArrayBodyStepSupplier.asArray(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<R[]>) = {description}
#Original text = {description}
http.api.response.GetObjectsFromArrayBodyStepSupplier.asArray(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<T>,java.util.function.Function<T,R[]>) = {description}

######################## http.api.response.GetObjectsFromArrayBodyStepSupplier$GetObjectsFromArrayWhenResponseReceived #
#_________________________________Parameters_____________________________________
#Original text = From http response get:
http.api.response.GetObjectsFromArrayBodyStepSupplier$GetObjectsFromArrayWhenResponseReceived.imperative = От http-ответа на запрос получить:
#Original text = From body of received http response
http.api.response.GetObjectsFromArrayBodyStepSupplier$GetObjectsFromArrayWhenResponseReceived.response = Http-ответ для получения данных

######################## http.api.response.GetObjectsFromArrayBodyStepSupplier$GetObjectsFromArrayWhenResponseReceiving #
#_________________________________Parameters_____________________________________
#Original text = Send http request. Wait for the response and then get:
http.api.response.GetObjectsFromArrayBodyStepSupplier$GetObjectsFromArrayWhenResponseReceiving.imperative = Отправить http-запрос. От http-ответа получить:
#Original text = Time to receive expected http response and get the result
http.api.response.GetObjectsFromArrayBodyStepSupplier$GetObjectsFromArrayWhenResponseReceiving.timeOut = Время на отправку/повторную отправку http-запроса и получение требуемых данных

######################## http.api.response.GetObjectsFromIterableBodyStepSupplier #
#_________________________________Parameters_____________________________________
#Original text = Criteria of an item of resulted iterable
http.api.response.GetObjectsFromIterableBodyStepSupplier.criteria = Критерий для каждого элемента, входящего в результат
#Original text = No data received:
http.api.response.GetObjectsFromIterableBodyStepSupplier.errorMessageStartingOnEmptyResult = Данные по http не были получены:
#__________________________________ Methods _______________________________________
#Original text = {description}
http.api.response.GetObjectsFromIterableBodyStepSupplier.asIterable(java.lang.String,java.net.http.HttpResponse<S>) = {description}
#Original text = {description}
http.api.response.GetObjectsFromIterableBodyStepSupplier.asIterable(java.lang.String,java.net.http.HttpResponse<T>,java.util.function.Function<T,S>) = {description}
#Original text = {description}
http.api.response.GetObjectsFromIterableBodyStepSupplier.asIterable(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<S>) = {description}
#Original text = {description}
http.api.response.GetObjectsFromIterableBodyStepSupplier.asIterable(java.lang.String,http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<T>,java.util.function.Function<T,S>) = {description}

######################## http.api.response.GetObjectsFromIterableBodyStepSupplier$GetObjectsFromIterableWhenResponseReceived #
#_________________________________Parameters_____________________________________
#Original text = From http response get:
http.api.response.GetObjectsFromIterableBodyStepSupplier$GetObjectsFromIterableWhenResponseReceived.imperative = От http-ответа на запрос получить:
#Original text = From body of received http response
http.api.response.GetObjectsFromIterableBodyStepSupplier$GetObjectsFromIterableWhenResponseReceived.response = Http-ответ для получения данных

######################## http.api.response.GetObjectsFromIterableBodyStepSupplier$GetObjectsFromIterableWhenResponseReceiving #
#_________________________________Parameters_____________________________________
#Original text = Send http request. Wait for the response and then get:
http.api.response.GetObjectsFromIterableBodyStepSupplier$GetObjectsFromIterableWhenResponseReceiving.imperative = Отправить http-запрос. От http-ответа получить:
#Original text = Time to receive expected http response and get the result
http.api.response.GetObjectsFromIterableBodyStepSupplier$GetObjectsFromIterableWhenResponseReceiving.timeOut = Время на отправку/повторную отправку http-запроса и получение требуемых данных

######################## http.api.response.ResponseSequentialGetSupplier #
#_________________________________Parameters_____________________________________
#Original text = Response criteria
http.api.response.ResponseSequentialGetSupplier.criteria = Критерий, которому должен соответствовать http-ответ
#Original text = Not received
http.api.response.ResponseSequentialGetSupplier.errorMessageStartingOnEmptyResult = Не был получен
#__________________________________ Methods _______________________________________
#Original text = Http Response
http.api.response.ResponseSequentialGetSupplier.response(http.api.request.RequestBuilder,java.net.http.HttpResponse$BodyHandler<T>) = Ответ на http-запрос

#============================================ CRITERIA ============================================ 

######################## http.api.cookies.CommonHttpCookieCriteria #
#__________________________________ Methods _______________________________________
#Original text = has comment '{comment}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieComment(java.lang.String) = коммент '{comment}'
#Original text = has comment that contains '{expression}' or fits regExp pattern '{expression}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieCommentMatches(java.lang.String) = коммент содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'
#Original text = has domain '{domain}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieDomain(java.lang.String) = Domain '{domain}'
#Original text = has domain that contains '{expression}' or fits regExp pattern '{expression}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieDomainMatches(java.lang.String) = domain содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'
#Original text = is http only
http.api.cookies.CommonHttpCookieCriteria.httpCookieIsHttpOnly() = HttpOnly
#Original text = is secure
http.api.cookies.CommonHttpCookieCriteria.httpCookieIsSecure() = Secure
#Original text = has name '{name}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieName(java.lang.String) = имя '{name}'
#Original text = has name that contains '{expression}' or fits regExp pattern '{expression}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieNameMatches(java.lang.String) = имя содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'
#Original text = has path '{path}'
http.api.cookies.CommonHttpCookieCriteria.httpCookiePath(java.lang.String) = Path '{path}'
#Original text = has path that contains '{expression}' or fits regExp pattern '{expression}'
http.api.cookies.CommonHttpCookieCriteria.httpCookiePathMatches(java.lang.String) = Path содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'
#Original text = has port list '{portList}'
http.api.cookies.CommonHttpCookieCriteria.httpCookiePortList(java.lang.String) = port list '{portList}'
#Original text = has port list that contains '{expression}' or fits regExp pattern '{expression}'
http.api.cookies.CommonHttpCookieCriteria.httpCookiePortListMatches(java.lang.String) = port list содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'
#Original text = to discard
http.api.cookies.CommonHttpCookieCriteria.httpCookieToDiscard() = discard
#Original text = has URL comment '{urlComment}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieURLComment(java.lang.String) = URL comment '{urlComment}'
#Original text = has URL comment that contains '{expression}' or fits regExp pattern '{expression}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieURLCommentMatches(java.lang.String) = URL-коммент содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'
#Original text = has value '{value}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieValue(java.lang.String) = контент/значение '{value}'
#Original text = has value that contains '{expression}' or fits regExp pattern '{expression}'
http.api.cookies.CommonHttpCookieCriteria.httpCookieValueMatches(java.lang.String) = контент/значение содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'

######################## http.api.response.ResponseCriteria #
#__________________________________ Methods _______________________________________
#Original text = Response URI {description} contains '{expression}' or meets regExp pattern '{expression}'
http.api.response.ResponseCriteria.uriPartRegExpCriteria(java.lang.String,java.lang.String,java.util.function.Function<java.net.URI,java.lang.String>) = {description} URI http-ответа содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'
#Original text = Response URI {description} is '{expected}'
http.api.response.ResponseCriteria.uriPartStringCriteria(java.lang.String,java.lang.String,java.util.function.Function<java.net.URI,java.lang.String>) = {description} URI http-ответа '{expected}'
#Original text = response has header '{name}' with value '{value}'
http.api.response.ResponseCriteria.headerValue(java.lang.String,java.lang.String) = http-ответ имеет заголовок '{name}' который содержит значение '{value}'
#Original text = response has header '{name}' with value contains/matches RegExp pattern '{valueExpression}'
http.api.response.ResponseCriteria.headerValueMatches(java.lang.String,java.lang.String) = http-ответ имеет заголовок '{name}' который содержит значение c подстрокой/соответствующее регулярному выражению '{valueExpression}'
#Original text = response URI is {uri}
http.api.response.ResponseCriteria.responseURI(java.net.URI) = URI http-ответа {uri}
#Original text = Response URI port is '{port}'
http.api.response.ResponseCriteria.responseURIPort(int) = Порт URI http-ответа '{port}'
#Original text = status code is {code}
http.api.response.ResponseCriteria.statusCode(int) = Koд статуса http-ответа {code}
#Original text = response URI contains '{expression}' or meets regExp pattern '{expression}'
http.api.response.ResponseCriteria.uriMatches(java.lang.String) = URI http-ответа содержит под-строку, равную '{expression}' или соответствующую рег. выражению '{expression}'

#============================================ ATTACHMENTS ============================================ 

######################## http.api.captors.request.CommonRequestBodyCaptor #
#Original text = Request body.
http.api.captors.request.CommonRequestBodyCaptor = Тело запроса

######################## http.api.captors.request.FileRequestBodyCaptor #
#Original text = Request body. File
http.api.captors.request.FileRequestBodyCaptor = Файл тела запроса

######################## http.api.captors.request.MultiPartRequestBodyCaptor #
#Original text = Multipart request body. Part:
http.api.captors.request.MultiPartRequestBodyCaptor = Multipart-тело запроса. Part:

######################## http.api.captors.request.StringRequestBodyCaptor #
#Original text = Request string body
http.api.captors.request.StringRequestBodyCaptor = Тело запроса. Строка

######################## http.api.captors.response.RequestResponseLogCaptor #
#Original text = Logs that have been captured during the sending of a request
http.api.captors.response.RequestResponseLogCaptor = Логи выполнения http-запроса

######################## http.api.captors.response.ResponseCaptor #
#Original text = Response
http.api.captors.response.ResponseCaptor = Http ответ

######################## http.api.captors.response.ResponseDTOCaptor #
#Original text = Response Body. DTO. Described by json-formatted string
http.api.captors.response.ResponseDTOCaptor = Тело Http ответа. DTO. описано как JSON

######################## http.api.captors.response.ResponseDTOs #
#Original text = Response Body. DTO collection. Described by json-formatted string
http.api.captors.response.ResponseDTOs = Тело Http ответа. Коллекция DTO. описано как JSON

######################## http.api.captors.response.ResponseFileCaptor #
#Original text = Response. File
http.api.captors.response.ResponseFileCaptor = Тело Http ответа. Файл

######################## http.api.captors.response.ResponseJSoupDocumentCaptor #
#Original text = Response Body. JSoup document
http.api.captors.response.ResponseJSoupDocumentCaptor = Тело Http ответа. xml/html документ

######################## http.api.captors.response.ResponseMapBodyCaptor #
#Original text = Response Body. Map
http.api.captors.response.ResponseMapBodyCaptor = Тело Http ответа. Map<?, ?>

######################## http.api.captors.response.ResponseObjectsBodyCaptor #
#Original text = Response Body. Objects
http.api.captors.response.ResponseObjectsBodyCaptor = Тело Http ответа. Набор объектов

######################## http.api.captors.response.ResponseStringCaptor #
#Original text = Response Body. String
http.api.captors.response.ResponseStringCaptor = Тело Http ответа. Текст

######################## http.api.captors.response.ResponseW3CDocumentCaptor #
#Original text = Response Body. W3C document
http.api.captors.response.ResponseW3CDocumentCaptor = Тело Http ответа. xml/html документ

#============================================ MATCHERS ============================================ 

######################## http.api.hamcrest.response.HasBody #
#Original text = response body {bodyMatcher}
http.api.hamcrest.response.HasBody = тело ответа {bodyMatcher}

######################## http.api.hamcrest.response.HasHeaders #
#Original text = response header name <{key}> <{value}>
http.api.hamcrest.response.HasHeaders = заголовок http ответа. имя <{key}> значение <{value}>

######################## http.api.hamcrest.response.HasPreviousResponse #
#Original text = response from redirect: {previousResponse}
http.api.hamcrest.response.HasPreviousResponse = http ответ от редиректа: {previousResponse}

######################## http.api.hamcrest.response.HasStatusCode #
#Original text = status code {status}
http.api.hamcrest.response.HasStatusCode = код {status}

######################## http.api.hamcrest.response.HasURI #
#Original text = URI {uri}
http.api.hamcrest.response.HasURI = URI http ответа {uri}

######################## http.api.hamcrest.response.HasVersion #
#Original text = protocol version {version}
http.api.hamcrest.response.HasVersion = версия протокола {version}

#============================================ MATCHED OBJECTS ============================================ 

######################## http.api.hamcrest.response.Header #
#Original text = http response header{header}
http.api.hamcrest.response.Header = заголовок http ответа{header}

#============================================ OTHER ============================================ 

######################## http.api.response.Response #
#Original text = Http response
http.api.response.Response = Http ответ