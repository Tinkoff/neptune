#Values for translation of steps, their parameters, matchers and their descriptions, and attachments are defined here. Format key = value

#============================================ STEPS ============================================ 

######################## core.api.steps.SequentialGetStepSupplier #
#_________________________________Parameters_____________________________________
#Original text = Get:
core.api.steps.SequentialGetStepSupplier.imperative=Получить:
#Original text = Result
core.api.steps.SequentialGetStepSupplier.resultDescription=Результат
#Original text = Not present:
core.api.steps.SequentialGetStepSupplier.errorMessageStartingOnEmptyResult=Не присутствует / не найдено:

######################## core.api.steps.SequentialActionSupplier #
#_________________________________Parameters_____________________________________
#Original text = Perform:
core.api.steps.SequentialActionSupplier.imperative=Выполнить:

######################## core.api.steps.Absence #
#_________________________________Parameters_____________________________________
#Original text = Wait for:
core.api.steps.Absence.imperative=Ожидать:
#Original text = Time of the waiting for absence
core.api.steps.Absence.timeOut=Время ожидания отсутствия/исчезновения
#Original text = Is absent
core.api.steps.Absence.resultDescription=Отсутствует:
#Original text = Still present:
core.api.steps.Absence.errorMessageStartingOnEmptyResult=Все еще присутствует:
#__________________________________ Methods _______________________________________
#Original text = Absence of {toBeAbsent}
core.api.steps.Absence.absence(core.api.steps.SequentialGetStepSupplier<T,?,?,?,?>)=Отсутствие. {toBeAbsent}

######################## core.api.steps.Presence #
#_________________________________Parameters_____________________________________
#Original text = Wait for:
core.api.steps.Presence.imperative=Ожидать:
#Original text = Is present
core.api.steps.Presence.resultDescription=Присутствует:
#__________________________________ Methods _______________________________________
#Original text = Presence of {toBePresent}
core.api.steps.Presence.presence(core.api.steps.SequentialGetStepSupplier<T,?,?,?,?>)=Наличие. {toBePresent}

#============================================ ATTACHMENTS ============================================ 

######################## core.api.event.firing.collections.ArrayCaptor #
#Original text = Resulted array
core.api.event.firing.collections.ArrayCaptor=Полученный массив

######################## core.api.event.firing.collections.CollectionCaptor #
#Original text = Resulted collection
core.api.event.firing.collections.CollectionCaptor=Полученная коллекция

######################## core.api.event.firing.collections.MapCaptor #
#Original text = Resulted map
core.api.event.firing.collections.MapCaptor=Полученный Map<?,?>

#============================================ MATCHERS ============================================ 

######################## core.api.hamcrest.common.all.AllCriteriaMatcher #
#Original text = {allMatchers}
core.api.hamcrest.common.all.AllCriteriaMatcher={allMatchers}

######################## core.api.hamcrest.common.any.AnyMatcher #
#Original text = {orExpression}
core.api.hamcrest.common.any.AnyMatcher={orExpression}

######################## core.api.hamcrest.common.not.NotMatcher #
#Original text = {notExpression}
core.api.hamcrest.common.not.NotMatcher={notExpression}

######################## core.api.hamcrest.common.only.one.OnlyOneMatcher #
#Original text = {onlyOneExpression}
core.api.hamcrest.common.only.one.OnlyOneMatcher={onlyOneExpression}

######################## core.api.hamcrest.iterables.MapEntryMatcher #
#Original text = Key: {key} Value: {value}
core.api.hamcrest.iterables.MapEntryMatcher=Ключ: {key} значение: {value}

######################## core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher #
#Original text = in any order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher=в любом порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher$ArrayConsistsOfMatcherInOrder #
#Original text = in following order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher$ArrayConsistsOfMatcherInOrder=в следующем порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher$IterableConsistsOfMatcherInOrder #
#Original text = in following order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher$IterableConsistsOfMatcherInOrder=в следующем порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher$MapConsistsOfMatcherInOrder #
#Original text = in following order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsConsistsOfMatcher$MapConsistsOfMatcherInOrder=в следующем порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsEachItemMatcher #
#Original text = each item: {matchers}
core.api.hamcrest.iterables.SetOfObjectsEachItemMatcher=каждый элемент: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsEachItemMatcher$MapEachItemMatcher #
#Original text = each entry: {matchers}
core.api.hamcrest.iterables.SetOfObjectsEachItemMatcher$MapEachItemMatcher=каждая запись: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher #
#Original text = includes in any order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher=включает в любом порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher$ArrayIncludesMatcherInOrder #
#Original text = includes in following order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher$ArrayIncludesMatcherInOrder=включает в следующем порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher$IterableIncludesMatcherInOrder #
#Original text = includes in following order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher$IterableIncludesMatcherInOrder=включает в следующем порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher$MapIncludesMatcherInOrder #
#Original text = includes in following order: {matchers}
core.api.hamcrest.iterables.SetOfObjectsIncludesMatcher$MapIncludesMatcherInOrder=включает в следующем порядке: {matchers}

######################## core.api.hamcrest.iterables.SetOfObjectsItemsMatcher #
#Original text = has item(s): {matchers}. Expected count: {count}
core.api.hamcrest.iterables.SetOfObjectsItemsMatcher=есть элемент(ы): {matchers}. Ожидаемое количество: {count}

######################## core.api.hamcrest.iterables.SetOfObjectsItemsMatcher$MapHasItemsMatcher #
#Original text = has entry(es): {matchers}. Expected count: {count}
core.api.hamcrest.iterables.SetOfObjectsItemsMatcher$MapHasItemsMatcher=есть запись(записи): {matchers}. Ожидаемое количество: {count}

######################## core.api.hamcrest.ofclass.OfClassMatcher #
#Original text = is object of class '{clazz}'
core.api.hamcrest.ofclass.OfClassMatcher=объект класса '{clazz}'

######################## core.api.hamcrest.pojo.PojoGetterReturnsMatcher #
#Original text = Public getter '{getter}' is expected to return a value: {criteria}
core.api.hamcrest.pojo.PojoGetterReturnsMatcher=Публичный метод '{getter}' должен вернуть значение: {criteria}

######################## core.api.hamcrest.resource.locator.HasHostMatcher #
#Original text = Host {matcher}
core.api.hamcrest.resource.locator.HasHostMatcher=хост {matcher}

######################## core.api.hamcrest.resource.locator.HasPathMatcher #
#Original text = Path {matcher}
core.api.hamcrest.resource.locator.HasPathMatcher=путь {matcher}

######################## core.api.hamcrest.resource.locator.HasPortMatcher #
#Original text = Port {matcher}
core.api.hamcrest.resource.locator.HasPortMatcher=порт {matcher}

######################## core.api.hamcrest.resource.locator.HasProtocolMatcher #
#Original text = Protocol {matcher}
core.api.hamcrest.resource.locator.HasProtocolMatcher=протокол {matcher}

######################## core.api.hamcrest.resource.locator.HasQueryParameters #
#Original text = has query parameter {key} {value}
core.api.hamcrest.resource.locator.HasQueryParameters=query-параметр {key} со значением {value}

######################## core.api.hamcrest.resource.locator.HasQueryStringMatcher #
#Original text = Query {matcher}
core.api.hamcrest.resource.locator.HasQueryStringMatcher=query {matcher}

######################## core.api.hamcrest.resource.locator.HasReferenceMatcher #
#Original text = Url reference {matcher}
core.api.hamcrest.resource.locator.HasReferenceMatcher=reference-часть Url {matcher}

######################## core.api.hamcrest.resource.locator.HasSchemeMatcher #
#Original text = Scheme {matcher}
core.api.hamcrest.resource.locator.HasSchemeMatcher=Схема {matcher}

######################## core.api.hamcrest.resource.locator.HasUserInfoMatcher #
#Original text = User info {matcher}
core.api.hamcrest.resource.locator.HasUserInfoMatcher=User info {matcher}

######################## core.api.hamcrest.text.StringContainsWithSeparator #
#Original text = string has substring(s) separated by <'{separator}'>: {toContain}
core.api.hamcrest.text.StringContainsWithSeparator=строка с разделителем <'{separator}'> содержит под-строки: {toContain}

######################## core.api.hamcrest.throwable.ThrowableIsCausedByMatcher$ThrowableIsCausedByMatcherDeep #
#Original text = has root cause that matches '{causeMatcher}'
core.api.hamcrest.throwable.ThrowableIsCausedByMatcher$ThrowableIsCausedByMatcherDeep=исключение-первопричина соответствует '{causeMatcher}'

######################## core.api.hamcrest.throwable.ThrowableIsCausedByMatcher$ThrowableIsCausedByMatcherPrimary #
#Original text = primary cause matches '{causeMatcher}'
core.api.hamcrest.throwable.ThrowableIsCausedByMatcher$ThrowableIsCausedByMatcherPrimary=исключение-причина соответствует '{causeMatcher}'

######################## core.api.hamcrest.throwable.ThrowableMessageMatcher #
#Original text = throwable has message '{messageMatcher}'
core.api.hamcrest.throwable.ThrowableMessageMatcher=сообщение '{messageMatcher}'

#============================================ MISMATCH DESCRIPTIONS ============================================ 

######################## core.api.hamcrest.NullValueMismatch #
#Original text = Null value. All checks were stopped
core.api.hamcrest.NullValueMismatch=Null. Проверка завершена

######################## core.api.hamcrest.ObjectIsNotPresentMismatch #
#Original text = Not present {objectName}: {characteristics}
core.api.hamcrest.ObjectIsNotPresentMismatch=Объект не найден {objectName}: {characteristics}

######################## core.api.hamcrest.PropertyValueMismatch #
#Original text = {property} {mismatch}
core.api.hamcrest.PropertyValueMismatch={property} {mismatch}

######################## core.api.hamcrest.SomethingWentWrongDescriber #
#Original text = Something went wrong. The exception was thrown: {exception}
core.api.hamcrest.SomethingWentWrongDescriber=Что-то пошло не так. Выброшенное исключение: {exception}

######################## core.api.hamcrest.TypeMismatch #
#Original text = Type mismatch. Object of class that equals or extends following types was expected: 
#{expected}
#Class of passed value is `{actual}`. All checks were stopped
core.api.hamcrest.TypeMismatch=Несоответствие типов. Ожидался объект одного из следующих классов: \r\n\
{expected}\r\n\
Класс объекта: `{actual}`. Проверка завершена

######################## core.api.hamcrest.common.DoesNotMatchAnyCriteria #
#Original text = <{value}> doesn't match any of listed criteria
core.api.hamcrest.common.DoesNotMatchAnyCriteria=<{value}> не соответствует ни одному из указанных параметров

######################## core.api.hamcrest.common.only.one.MatchesMoreThanOneCriteria #
#Original text = Value: {value}. Only one of listed criteria was expected to be matched. Checks of following criteria were positive:
# {matchers}
core.api.hamcrest.common.only.one.MatchesMoreThanOneCriteria=Значение: {value}. Ожидалось соответствие только одному из перечисленных критериев. Соответствия:\r\n\
{matchers}

######################## core.api.hamcrest.iterables.descriptions.DifferentSizeMismatch #
#Original text = {actual} items instead of {expected}
core.api.hamcrest.iterables.descriptions.DifferentSizeMismatch={actual} элементов вместо {expected}

######################## core.api.hamcrest.iterables.descriptions.EmptyMismatch #
#Original text = <EMPTY>
core.api.hamcrest.iterables.descriptions.EmptyMismatch=<ПУСТО>

######################## core.api.hamcrest.iterables.descriptions.OutOfItemsOrderMismatch #
#Original text = The item ['{currentCriteria}'] doesn't go after : [{lastSuccessful}; index: {lastSuccessfulIndex}; criteria: '{lastSuccessfulCriteria}']
core.api.hamcrest.iterables.descriptions.OutOfItemsOrderMismatch=Элемент ['{currentCriteria}'] не следует за : [{lastSuccessful}; индекс: {lastSuccessfulIndex}; критерий: '{lastSuccessfulCriteria}']

######################## core.api.hamcrest.pojo.NoSuchMethodMismatch #
#Original text = Class {clazz} has no non-static and public method '{getter}' with empty signature and which returns some value
core.api.hamcrest.pojo.NoSuchMethodMismatch=Класс {clazz} не имеет нестатический и публичный метод '{getter}' с пустой сигнатурой и возвращающий значение

#============================================ MATCHED OBJECTS ============================================ 

######################## core.api.hamcrest.iterables.descriptions.Count #
#Original text = Count
core.api.hamcrest.iterables.descriptions.Count=Количество

######################## core.api.hamcrest.iterables.descriptions.Item #
#Original text = item{indexStr}
core.api.hamcrest.iterables.descriptions.Item=элемент{indexStr}

######################## core.api.hamcrest.iterables.descriptions.Key #
#Original text = Key
core.api.hamcrest.iterables.descriptions.Key=Ключ

######################## core.api.hamcrest.iterables.descriptions.Value #
#Original text = Value
core.api.hamcrest.iterables.descriptions.Value=Значение

######################## core.api.hamcrest.ofclass.ClassOfObject #
#Original text = Class of object
core.api.hamcrest.ofclass.ClassOfObject=Класс объекта

######################## core.api.hamcrest.pojo.ReturnedObject #
#Original text = value returned from '{getter}'
core.api.hamcrest.pojo.ReturnedObject=значение, которое вернул '{getter}'

######################## core.api.hamcrest.resource.locator.QueryParameter #
#Original text = URI/URL query parameter{param}
core.api.hamcrest.resource.locator.QueryParameter=query-параметр URI/URL{param}

######################## core.api.hamcrest.throwable.ThrowableCause #
#Original text = cause of the throwable
core.api.hamcrest.throwable.ThrowableCause=причина исключения

#============================================ PARAMETER WRAPPERS ============================================ 

######################## core.api.steps.selections.SelectionOfItem #
#_________________________________Parameters_____________________________________
#Original text = Index of got item to be returned
core.api.steps.selections.SelectionOfItem.index=Индекс полученного элемента, который следует вернуть

######################## core.api.steps.selections.SelectionOfItems #
#_________________________________Parameters_____________________________________
#Original text = How many got items to return
core.api.steps.selections.SelectionOfItems.size=Сколько полученных элементов вернуть
#Original text = To return got items before/after
core.api.steps.selections.SelectionOfItems.direction=Вернуть полученные элементы до/после
#Original text = Indexes of got items to be returned
core.api.steps.selections.SelectionOfItems.indexes=Индексы полученных элементов, которые следует вернуть

######################## core.api.steps.selections.SelectionOfIterable #
#_________________________________Parameters_____________________________________
#Original text = Return the result when total count of got items is
core.api.steps.selections.SelectionOfIterable.whenCount=Вернуть результат, когда общее количество полученных элементов

#============================================ MATCHERS FROM ORG.HAMCREST ============================================ 

######################## org.hamcrest.CoreMatchers #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.CoreMatchers.allOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=все перечисленное: {0}
#Original text = 
org.hamcrest.CoreMatchers.allOf(org.hamcrest.Matcher<?superT>[])=все перечисленное: {0}
#Original text = 
org.hamcrest.CoreMatchers.any(java.lang.Class<T>)=объект '{0}'
#Original text = 
org.hamcrest.CoreMatchers.anything()=<ЛЮБОЕ ЗНАЧЕНИЕ>
#Original text = 
org.hamcrest.CoreMatchers.anything(java.lang.String)=любой(ое): {0}
#Original text = 
org.hamcrest.CoreMatchers.containsString(java.lang.String)=содержит строку '{0}'
#Original text = 
org.hamcrest.CoreMatchers.containsStringIgnoringCase(java.lang.String)=содержит строку '{0}' без учета регистра
#Original text = 
org.hamcrest.CoreMatchers.endsWith(java.lang.String)=строка, заканчивающаяся '{0}'
#Original text = 
org.hamcrest.CoreMatchers.endsWithIgnoringCase(java.lang.String)=строка, заканчивающаяся '{0}', без учета регистра
#Original text = 
org.hamcrest.CoreMatchers.equalTo(T)=равно '{0}'
#Original text = 
org.hamcrest.CoreMatchers.equalToObject(java.lang.Object)=равно объекту '{0}'
#Original text = 
org.hamcrest.CoreMatchers.everyItem(org.hamcrest.Matcher<U>)=каждый элемент '{0}'
#Original text = 
org.hamcrest.CoreMatchers.hasItem(T)=содержит элемент '{0}'
#Original text = 
org.hamcrest.CoreMatchers.hasItem(org.hamcrest.Matcher<?superT>)=содержит элемент, который соответствует '{0}'
#Original text = 
org.hamcrest.CoreMatchers.hasItems(T[])=содержит элементы: {0}
#Original text = 
org.hamcrest.CoreMatchers.hasItems(org.hamcrest.Matcher<?superT>[])=содержит элементы, которые соответствуют: {0}
#Original text = 
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class<?>)=объект '{0}'
#Original text = 
org.hamcrest.CoreMatchers.is(T)={0}
#Original text = 
org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher<T>)={0}
#Original text = 
org.hamcrest.CoreMatchers.isA(java.lang.Class<T>)=объект '{0}'
#Original text = 
org.hamcrest.CoreMatchers.not(T)=НЕ '{0}'
#Original text = 
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher<T>)=НЕ {0}
#Original text = 
org.hamcrest.CoreMatchers.notNullValue()=отличное от null значение
#Original text = 
org.hamcrest.CoreMatchers.notNullValue(java.lang.Class<T>)=отличное от null значение класса '{0}'
#Original text = 
org.hamcrest.CoreMatchers.nullValue()=null
#Original text = 
org.hamcrest.CoreMatchers.nullValue(java.lang.Class<T>)=null-значение класса '{0}'
#Original text = 
org.hamcrest.CoreMatchers.sameInstance(T)=тот же самый объект, что и '{0}'
#Original text = 
org.hamcrest.CoreMatchers.startsWith(java.lang.String)=строка, начинающаяся '{0}' 
#Original text = 
org.hamcrest.CoreMatchers.startsWithIgnoringCase(java.lang.String)=строка, начинающаяся '{0}', без учета регистра
#Original text = 
org.hamcrest.CoreMatchers.theInstance(T)=тот же самый объект, что и '{0}'
#Original text = 
org.hamcrest.CoreMatchers.anyOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=значение, соответствующее любому из: {0}
#Original text = 
org.hamcrest.CoreMatchers.anyOf(org.hamcrest.Matcher<?superT>[])=значение, соответствующее любому из: {0}

######################## org.hamcrest.beans.HasProperty #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.beans.HasProperty.hasProperty(java.lang.String)=Есть поле/свойство '{0}'

######################## org.hamcrest.beans.HasPropertyWithValue #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.beans.HasPropertyWithValue.hasProperty(java.lang.String,org.hamcrest.Matcher<?>)=поле/свойство '{0}', значение которого соответствует '{1}'
#Original text = 
org.hamcrest.beans.HasPropertyWithValue.hasPropertyAtPath(java.lang.String,org.hamcrest.Matcher<T>)=поле/свойство '{0}', значение которого соответствует '{1}'

######################## org.hamcrest.beans.SamePropertyValuesAs #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.beans.SamePropertyValuesAs.samePropertyValuesAs(B,java.lang.String[])=значения полей/свойств {1} равны значениям перечисленных полей/свойств объекта '{0}'

######################## org.hamcrest.collection.ArrayMatching #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContaining(E[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContaining(java.util.List<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContaining(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContainingInAnyOrder(E[])=Массив состоит из {0}
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContainingInAnyOrder(java.util.Collection<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, соответствующих {0}
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContainingInAnyOrder(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, соответствующих {0}
#Original text = 
org.hamcrest.collection.ArrayMatching.hasItemInArray(T)=Массив включает элемент '{0}'
#Original text = 
org.hamcrest.collection.ArrayMatching.hasItemInArray(org.hamcrest.Matcher<?superT>)=Массив включает элемент, соответствующий '{0}'

######################## org.hamcrest.collection.IsArray #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArray.array(org.hamcrest.Matcher<?superT>[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке

######################## org.hamcrest.collection.IsArrayContainingInAnyOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArrayContainingInAnyOrder.arrayContainingInAnyOrder(E[])=Массив состоит из {0}
#Original text = 
org.hamcrest.collection.IsArrayContainingInAnyOrder.arrayContainingInAnyOrder(java.util.Collection<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, соответствующих {0}
#Original text = 
org.hamcrest.collection.IsArrayContainingInAnyOrder.arrayContainingInAnyOrder(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, соответствующих {0}

######################## org.hamcrest.collection.IsArrayContainingInOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArrayContainingInOrder.arrayContaining(E[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsArrayContainingInOrder.arrayContaining(java.util.List<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsArrayContainingInOrder.arrayContaining(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке

######################## org.hamcrest.collection.IsArrayWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArrayWithSize.arrayWithSize(int)=Размер массива {0}
#Original text = 
org.hamcrest.collection.IsArrayWithSize.arrayWithSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=Размер массива соответствует '{0}'
#Original text = 
org.hamcrest.collection.IsArrayWithSize.emptyArray()=Пустой массив

######################## org.hamcrest.collection.IsCollectionWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsCollectionWithSize.hasSize(int)=Размер коллекции {0}
#Original text = 
org.hamcrest.collection.IsCollectionWithSize.hasSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=Размер коллекции соответствует '{0}'

######################## org.hamcrest.collection.IsEmptyCollection #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsEmptyCollection.empty()=Пустая коллекция
#Original text = 
org.hamcrest.collection.IsEmptyCollection.emptyCollectionOf(java.lang.Class<E>)=Пустая коллекция элементов класса '{0}'

######################## org.hamcrest.collection.IsEmptyIterable #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsEmptyIterable.emptyIterable()=Пустое перечислимое
#Original text = 
org.hamcrest.collection.IsEmptyIterable.emptyIterableOf(java.lang.Class<E>)=Пустое перечислимое элементов класса '{0}'

######################## org.hamcrest.collection.IsIn #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIn.in(T[])=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.in(java.util.Collection<T>)=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.isIn(T[])=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.isIn(java.util.Collection<T>)=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.isOneOf(T[])=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.oneOf(T[])=Входит в состав {0}

######################## org.hamcrest.collection.IsIterableContainingInAnyOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableContainingInAnyOrder.containsInAnyOrder(T[])=состоит из: {0}
#Original text = 
org.hamcrest.collection.IsIterableContainingInAnyOrder.containsInAnyOrder(java.util.Collection<org.hamcrest.Matcher<?superT>>)=состоит из элементов, соответствующих: {0}
#Original text = 
org.hamcrest.collection.IsIterableContainingInAnyOrder.containsInAnyOrder(org.hamcrest.Matcher<?superT>[])=состоит из элементов, соответствующих: {0}

######################## org.hamcrest.collection.IsIterableContainingInOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(E[])=состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(java.util.List<org.hamcrest.Matcher<?superE>>)=состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(org.hamcrest.Matcher<?superE>)=состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(org.hamcrest.Matcher<?superE>[])=состоит из элементов, которые соответствуют: {0}. В строгом порядке

######################## org.hamcrest.collection.IsIterableContainingInRelativeOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableContainingInRelativeOrder.containsInRelativeOrder(E[])=включает элементы: {0}. В указанном порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInRelativeOrder.containsInRelativeOrder(java.util.List<org.hamcrest.Matcher<?superE>>)=включает элементы, соответствующие: {0}. В указанном порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInRelativeOrder.containsInRelativeOrder(org.hamcrest.Matcher<?superE>[])=включает элементы, соответствующие: {0}. В указанном порядке

######################## org.hamcrest.collection.IsIterableWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableWithSize.iterableWithSize(int)=размер {0}
#Original text = 
org.hamcrest.collection.IsIterableWithSize.iterableWithSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=размер соответствует '{0}'

######################## org.hamcrest.collection.IsMapContaining #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsMapContaining.hasEntry(K,V)=есть запись, ключ '{0}', значение '{1}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasEntry(org.hamcrest.Matcher<?superK>,org.hamcrest.Matcher<?superV>)=есть запись, ключ соответствует '{0}', значение соответствует '{1}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasKey(K)=есть ключ '{0}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasKey(org.hamcrest.Matcher<?superK>)=есть ключ, соответствующий '{0}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasValue(V)=есть значение '{0}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasValue(org.hamcrest.Matcher<?superV>)=есть значение, соответствующее '{0}'

######################## org.hamcrest.collection.IsMapWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsMapWithSize.aMapWithSize(int)=размер {0}
#Original text = 
org.hamcrest.collection.IsMapWithSize.aMapWithSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=размер соответствует '{0}'
#Original text = 
org.hamcrest.collection.IsMapWithSize.anEmptyMap()=пустой Map<>

######################## org.hamcrest.comparator.ComparatorMatcherBuilder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.comparesEqualTo(T)={0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.greaterThan(T)=больше чем {0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.greaterThanOrEqualTo(T)=не меньше чем {0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.lessThan(T)=меньше чем {0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.lessThanOrEqualTo(T)=не более чем {0}

######################## org.hamcrest.core.AllOf #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.AllOf.allOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=все перечисленное: {0}
#Original text = 
org.hamcrest.core.AllOf.allOf(org.hamcrest.Matcher<?superT>[])=все перечисленное: {0}

######################## org.hamcrest.core.AnyOf #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.AnyOf.anyOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=
#Original text = 
org.hamcrest.core.AnyOf.anyOf(org.hamcrest.Matcher<?superT>[])=

######################## org.hamcrest.core.CombinableMatcher #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.CombinableMatcher.and(org.hamcrest.Matcher<?superT>)=и {0}
#Original text = 
org.hamcrest.core.CombinableMatcher.or(org.hamcrest.Matcher<?superT>)=либо {0}

######################## org.hamcrest.core.CombinableMatcher$CombinableBothMatcher #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.CombinableMatcher$CombinableBothMatcher.and(org.hamcrest.Matcher<?superX>)=и {0}

######################## org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher.or(org.hamcrest.Matcher<?superX>)=либо {0}

######################## org.hamcrest.core.Every #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.Every.everyItem(org.hamcrest.Matcher<U>)=каждый элемент соответствует {0}

######################## org.hamcrest.core.Is #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.Is.is(T)={0}
#Original text = 
org.hamcrest.core.Is.is(org.hamcrest.Matcher<T>)={0}
#Original text = 
org.hamcrest.core.Is.isA(java.lang.Class<?>)=объект класса '{0}'

######################## org.hamcrest.core.IsAnything #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsAnything.anything()=<ЛЮБОЕ ЗНАЧЕНИЕ>
#Original text = 
org.hamcrest.core.IsAnything.anything(java.lang.String)=любой(ое): {0}

######################## org.hamcrest.core.IsCollectionContaining #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItem(T)=коллекция содержит элемент '{0}'
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItem(org.hamcrest.Matcher<?superT>)=коллекция содержит элемент, который соответствует '{0}'
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItems(T[])=коллекция содержит элементы: {0}
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItems(org.hamcrest.Matcher<?superT>[])=коллекция содержит элементы, которые соответствуют: {0}

######################## org.hamcrest.core.IsEqual #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsEqual.equalTo(T)=равно '{0}'
#Original text = 
org.hamcrest.core.IsEqual.equalToObject(java.lang.Object)=равно объекту '{0}'

######################## org.hamcrest.core.IsInstanceOf #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsInstanceOf.any(java.lang.Class<T>)=объект '{0}'
#Original text = 
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class<?>)=объект '{0}'

######################## org.hamcrest.core.IsIterableContaining #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItem(T)=содержит элемент '{0}'
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItem(org.hamcrest.Matcher<?superT>)=содержит элемент, который соответствует '{0}'
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItems(T[])=содержит элементы: {0}
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItems(org.hamcrest.Matcher<?superT>[])=содержит элементы, которые соответствуют: {0}

######################## org.hamcrest.core.IsNot #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsNot.not(T)=не '{0}'
#Original text = 
org.hamcrest.core.IsNot.not(org.hamcrest.Matcher<T>)=не '{0}'

######################## org.hamcrest.core.IsNull #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsNull.notNullValue()=отличное от null значение
#Original text = 
org.hamcrest.core.IsNull.notNullValue(java.lang.Class<T>)=отличное от null значение класса '{0}'
#Original text = 
org.hamcrest.core.IsNull.nullValue()=null
#Original text = 
org.hamcrest.core.IsNull.nullValue(java.lang.Class<T>)=null-значение класса '{0}'

######################## org.hamcrest.core.IsSame #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsSame.sameInstance(T)=тот же самый объект, что и '{0}'
#Original text = 
org.hamcrest.core.IsSame.theInstance(T)=тот же самый объект, что и '{0}'

######################## org.hamcrest.core.StringContains #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringContains.containsString(java.lang.String)=содержит строку '{0}'
#Original text = 
org.hamcrest.core.StringContains.containsStringIgnoringCase(java.lang.String)=содержит строку '{0}' без учета регистра

######################## org.hamcrest.core.StringEndsWith #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringEndsWith.endsWith(java.lang.String)=строка, заканчивающаяся '{0}'
#Original text = 
org.hamcrest.core.StringEndsWith.endsWithIgnoringCase(java.lang.String)=строка, заканчивающаяся '{0}', без учета регистра

######################## org.hamcrest.core.StringRegularExpression #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringRegularExpression.matchesRegex(java.lang.String)=строка соответствует регулярному выражению '{0}'
#Original text = 
org.hamcrest.core.StringRegularExpression.matchesRegex(java.util.regex.Pattern)=строка соответствует регулярному выражению '{0}'

######################## org.hamcrest.core.StringStartsWith #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringStartsWith.startsWith(java.lang.String)=строка, начинающаяся '{0}' 
#Original text = 
org.hamcrest.core.StringStartsWith.startsWithIgnoringCase(java.lang.String)=строка, начинающаяся '{0}', без учета регистра

######################## org.hamcrest.io.FileMatchers #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.io.FileMatchers.aFileNamed(org.hamcrest.Matcher<java.lang.String>)=имя файла соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithAbsolutePath(org.hamcrest.Matcher<java.lang.String>)=абсолютный путь к файлу соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithCanonicalPath(org.hamcrest.Matcher<java.lang.String>)=путь к файлу соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithSize(long)=Размер файла {0}
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithSize(org.hamcrest.Matcher<java.lang.Long>)=Размер файла соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aReadableFile()=Файл можно читать
#Original text = 
org.hamcrest.io.FileMatchers.aWritableFile()=Файл можно редактировать
#Original text = 
org.hamcrest.io.FileMatchers.anExistingDirectory()=Существующая директория
#Original text = 
org.hamcrest.io.FileMatchers.anExistingFile()=Существующий файл
#Original text = 
org.hamcrest.io.FileMatchers.anExistingFileOrDirectory()=Существующий файл или директория

######################## org.hamcrest.number.BigDecimalCloseTo #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.BigDecimalCloseTo.closeTo(java.math.BigDecimal,java.math.BigDecimal)=Число, близкое к {0} c допустимой погрешностью {1}

######################## org.hamcrest.number.IsCloseTo #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.IsCloseTo.closeTo(double,double)=Число, близкое к {0} c допустимой погрешностью {1}

######################## org.hamcrest.number.IsNaN #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.IsNaN.notANumber()=Не является числом

######################## org.hamcrest.number.OrderingComparison #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.OrderingComparison.comparesEqualTo(T)={0}
#Original text = 
org.hamcrest.number.OrderingComparison.greaterThan(T)=больше чем {0}
#Original text = 
org.hamcrest.number.OrderingComparison.greaterThanOrEqualTo(T)=не меньше чем {0}
#Original text = 
org.hamcrest.number.OrderingComparison.lessThan(T)=меньше чем {0}
#Original text = 
org.hamcrest.number.OrderingComparison.lessThanOrEqualTo(T)=не более чем {0}

######################## org.hamcrest.object.HasToString #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.object.HasToString.hasToString(java.lang.String)=текстовое представление объекта '{0}'
#Original text = 
org.hamcrest.object.HasToString.hasToString(org.hamcrest.Matcher<?superjava.lang.String>)=текстовое представление объекта соответствует '{0}'

######################## org.hamcrest.object.IsCompatibleType #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.object.IsCompatibleType.typeCompatibleWith(java.lang.Class<T>)=тип совместим с '{0}'

######################## org.hamcrest.object.IsEventFrom #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.object.IsEventFrom.eventFrom(java.lang.Class<?extendsjava.util.EventObject>,java.lang.Object)=событие '{0}', источник '{1}'
#Original text = 
org.hamcrest.object.IsEventFrom.eventFrom(java.lang.Object)=источник события '{1}'

######################## org.hamcrest.text.CharSequenceLength #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.CharSequenceLength.hasLength(int)=длина '{0}'
#Original text = 
org.hamcrest.text.CharSequenceLength.hasLength(org.hamcrest.Matcher<?superjava.lang.Integer>)=длина соответствует '{0}'

######################## org.hamcrest.text.IsBlankString #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsBlankString.blankOrNullString()=пустая строка или null
#Original text = 
org.hamcrest.text.IsBlankString.blankString()=пустая строка

######################## org.hamcrest.text.IsEmptyString #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsEmptyString.emptyOrNullString()=пустая строка или null
#Original text = 
org.hamcrest.text.IsEmptyString.emptyString()=пустая строка
#Original text = 
org.hamcrest.text.IsEmptyString.isEmptyOrNullString()=пустая строка или null
#Original text = 
org.hamcrest.text.IsEmptyString.isEmptyString()=пустая строка

######################## org.hamcrest.text.IsEqualCompressingWhiteSpace #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsEqualCompressingWhiteSpace.equalToCompressingWhiteSpace(java.lang.String)=строка равна '{0}' без учета пробелов
#Original text = 
org.hamcrest.text.IsEqualCompressingWhiteSpace.equalToIgnoringWhiteSpace(java.lang.String)=строка равна '{0}' без учета пробелов

######################## org.hamcrest.text.IsEqualIgnoringCase #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsEqualIgnoringCase.equalToIgnoringCase(java.lang.String)=строка равна '{0}' без учета регистра

######################## org.hamcrest.text.MatchesPattern #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.MatchesPattern.matchesPattern(java.lang.String)=строка соответствует регулярному выражению '{0}'
#Original text = 
org.hamcrest.text.MatchesPattern.matchesPattern(java.util.regex.Pattern)=строка соответствует регулярному выражению '{0}'

######################## org.hamcrest.text.StringContainsInOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.StringContainsInOrder.stringContainsInOrder(java.lang.Iterable<java.lang.String>)=содержит строки: {0}. В указанном порядке
#Original text = 
org.hamcrest.text.StringContainsInOrder.stringContainsInOrder(java.lang.String[])=содержит строки: {0}. В указанном порядке

######################## org.hamcrest.xml.HasXPath #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String)=есть объект, найденный по xpath '{0}'
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String,javax.xml.namespace.NamespaceContext)=есть объект, найденный по xpath '{0}'
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String,javax.xml.namespace.NamespaceContext,org.hamcrest.Matcher<java.lang.String>)=объект, найденный по xpath '{0}', соответствует {2}
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String,org.hamcrest.Matcher<java.lang.String>)=объект, найденный по xpath '{0}', соответствует {1}

#============================================ OTHER ============================================ 

######################## core.api.logical.lexemes.Not #
#Original text = not
core.api.logical.lexemes.Not=НЕ

######################## core.api.logical.lexemes.OnlyOne #
#Original text = xor
core.api.logical.lexemes.OnlyOne=xor

######################## core.api.logical.lexemes.Or #
#Original text = or
core.api.logical.lexemes.Or=или

######################## core.api.steps.SequentialGetStepSupplier$GotItems #
#Original text = Got items
core.api.steps.SequentialGetStepSupplier$GotItems=Полученные элементы

######################## core.api.steps.selections.Direction$After #
#Original text = After item index={indexFrom}
core.api.steps.selections.Direction$After=После элемента с индексом={indexFrom}

######################## core.api.steps.selections.Direction$Before #
#Original text = Before item index={indexFrom}
core.api.steps.selections.Direction$Before=До элемента с индексом={indexFrom}

######################## core.api.steps.selections.ItemsCountCondition$GreaterThan #
#Original text = Greater than
core.api.steps.selections.ItemsCountCondition$GreaterThan=Больше

######################## core.api.steps.selections.ItemsCountCondition$GreaterThanOrEqual #
#Original text = Greater than or equal
core.api.steps.selections.ItemsCountCondition$GreaterThanOrEqual=Больше или равно

######################## core.api.steps.selections.ItemsCountCondition$LesserThan #
#Original text = Lesser than
core.api.steps.selections.ItemsCountCondition$LesserThan=Меньше

######################## core.api.steps.selections.ItemsCountCondition$LesserThanOrEqual #
#Original text = Lesser than or equal
core.api.steps.selections.ItemsCountCondition$LesserThanOrEqual=Меньше или равно

######################## core.api.steps.selections.ItemsCountCondition$WhenCountEquals #
#Original text = equal {count}
core.api.steps.selections.ItemsCountCondition$WhenCountEquals=Равно {count}

######################## core.api.steps.selections.SelectionOfIterable$OnCondition #
#Original text = Return if set of got items matches
core.api.steps.selections.SelectionOfIterable$OnCondition=Вернуть, если набор полученных элементов соответствует

######################## core.api.steps.selections.mismatch.dictionary.CountOfItemsDoesntMatchCondition #
#Original text = Count [{size}] of got items doesnt match '{condition}'
core.api.steps.selections.mismatch.dictionary.CountOfItemsDoesntMatchCondition=Количество [{size}] полученных элементов не соответствует '{condition}'

######################## core.api.steps.selections.mismatch.dictionary.DoesntMatch #
#Original text = Set of got items doesnt match '{condition}'
core.api.steps.selections.mismatch.dictionary.DoesntMatch=Набор полученных элементов не соответствует '{condition}'

######################## core.api.steps.selections.mismatch.dictionary.ImpossibleToSelectResultedItemsFromIterable #
#Original text = It is not possible to select resulted items because:
core.api.steps.selections.mismatch.dictionary.ImpossibleToSelectResultedItemsFromIterable=Невозможно получить результирующие элементы, т.к.:

######################## core.api.steps.selections.mismatch.dictionary.IndexIsOut #
#Original text = Index [{index}] is out of got items count [{count}]
core.api.steps.selections.mismatch.dictionary.IndexIsOut=Индекс [{index}] больше количества полученных элементов [{count}]

######################## core.api.steps.selections.mismatch.dictionary.MaxIndexIsOut #
#Original text = Max index [{index}] is out of got items count [{count}]
core.api.steps.selections.mismatch.dictionary.MaxIndexIsOut=Максимальный индекс [{index}] больше количества полученных элементов [{count}]

######################## core.api.steps.selections.mismatch.dictionary.MinIndexIsOut #
#Original text = Min index [{index}] is out of got items count [{count}]
core.api.steps.selections.mismatch.dictionary.MinIndexIsOut=Минимальный индекс [{index}] больше количества полученных элементов [{count}]

######################## core.api.steps.selections.mismatch.dictionary.WasEmpty #
#Original text = Set of got items was empty
core.api.steps.selections.mismatch.dictionary.WasEmpty=Набор полученных элементов был пуст

######################## core.api.steps.selections.mismatch.dictionary.WasNull #
#Original text = Set of got items was null
core.api.steps.selections.mismatch.dictionary.WasNull=Набор полученных элементов был null