#Values for translation of steps, their parameters, matchers and their descriptions, and attachments are defined here. Format key = value

#============================================ STEPS ============================================ 

######################## check.CheckActionSupplier #
#_________________________________Parameters_____________________________________
#Original text = Check:
check.CheckActionSupplier.imperative=Проверить:
#__________________________________ Methods _______________________________________
#Original text = {t}
check.CheckActionSupplier.checkActionSupplier(T,check.MatchAction<T,?>[])={t}
#Original text = {description}
check.CheckActionSupplier.checkActionSupplier(java.lang.String,java.util.function.Function<R,T>,check.MatchAction<T,?>[])={description}

######################## check.MatchAction #
#_________________________________Parameters_____________________________________
#Original text = Assert:
check.MatchAction.imperative=Проверить:
#__________________________________ Methods _______________________________________
#Original text = {description} {matcher}
check.MatchAction.matchPrivate(java.lang.String,java.util.function.Function<T,R>,org.hamcrest.Matcher<?superR>)={description} {matcher}
#Original text = {matcher}
check.MatchAction.matchPrivate(org.hamcrest.Matcher<?superT>)={matcher}

#============================================ MATCHERS ============================================ 

######################## check.MatcherWithTime #
#Original text = {delegateDescription}
check.MatcherWithTime={delegateDescription}

#============================================ MISMATCH DESCRIPTIONS ============================================ 

######################## check.AssertFoundMismatchesDescription #
#Original text = Found mismatches:
#{mismatches}
check.AssertFoundMismatchesDescription=Найденные несоответствия:\r\n\
{mismatches}

######################## check.AssertMismatchDescriber #
#Original text = Expected:{reason} {expectedDescription}
#Checked value: '{value}'
#Result: {actualDescription}
check.AssertMismatchDescriber=Ожидалось:{reason} {expectedDescription}\r\n\
Проверяемое значение: '{value}'\r\n\
Результат: {actualDescription}

######################## check.MismatchDescriberWithTime #
#Original text = {otherDescriber}. Time of the waiting for the matching: {duration}
check.MismatchDescriberWithTime={otherDescriber}. Время ожидания успешного завершения проверки: {duration}

#============================================ MATCHERS FROM ORG.HAMCREST ============================================ 

######################## org.hamcrest.CoreMatchers #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.CoreMatchers.allOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=все перечисленное: {0}
#Original text = 
org.hamcrest.CoreMatchers.allOf(org.hamcrest.Matcher<?superT>[])=все перечисленное: {0}
#Original text = 
org.hamcrest.CoreMatchers.any(java.lang.Class<T>)=объект '{0}'
#Original text = 
org.hamcrest.CoreMatchers.anything()=<ЛЮБОЕ ЗНАЧЕНИЕ>
#Original text = 
org.hamcrest.CoreMatchers.anything(java.lang.String)=любой(ое): {0}
#Original text = 
org.hamcrest.CoreMatchers.containsString(java.lang.String)=содержит строку '{0}'
#Original text = 
org.hamcrest.CoreMatchers.containsStringIgnoringCase(java.lang.String)=содержит строку '{0}' без учета регистра
#Original text = 
org.hamcrest.CoreMatchers.endsWith(java.lang.String)=строка, заканчивающаяся '{0}'
#Original text = 
org.hamcrest.CoreMatchers.endsWithIgnoringCase(java.lang.String)=строка, заканчивающаяся '{0}', без учета регистра
#Original text = 
org.hamcrest.CoreMatchers.equalTo(T)=равно '{0}'
#Original text = 
org.hamcrest.CoreMatchers.equalToObject(java.lang.Object)=равно объекту '{0}'
#Original text = 
org.hamcrest.CoreMatchers.everyItem(org.hamcrest.Matcher<U>)=каждый элемент '{0}'
#Original text = 
org.hamcrest.CoreMatchers.hasItem(T)=содержит элемент '{0}'
#Original text = 
org.hamcrest.CoreMatchers.hasItem(org.hamcrest.Matcher<?superT>)=содержит элемент, который соответствует '{0}'
#Original text = 
org.hamcrest.CoreMatchers.hasItems(T[])=содержит элементы: {0}
#Original text = 
org.hamcrest.CoreMatchers.hasItems(org.hamcrest.Matcher<?superT>[])=содержит элементы, которые соответствуют: {0}
#Original text = 
org.hamcrest.CoreMatchers.instanceOf(java.lang.Class<?>)=объект '{0}'
#Original text = 
org.hamcrest.CoreMatchers.is(T)={0}
#Original text = 
org.hamcrest.CoreMatchers.is(org.hamcrest.Matcher<T>)={0}
#Original text = 
org.hamcrest.CoreMatchers.isA(java.lang.Class<T>)=объект '{0}'
#Original text = 
org.hamcrest.CoreMatchers.not(T)=НЕ '{0}'
#Original text = 
org.hamcrest.CoreMatchers.not(org.hamcrest.Matcher<T>)=НЕ {0}
#Original text = 
org.hamcrest.CoreMatchers.notNullValue()=отличное от null значение
#Original text = 
org.hamcrest.CoreMatchers.notNullValue(java.lang.Class<T>)=отличное от null значение класса '{0}'
#Original text = 
org.hamcrest.CoreMatchers.nullValue()=null
#Original text = 
org.hamcrest.CoreMatchers.nullValue(java.lang.Class<T>)=null-значение класса '{0}'
#Original text = 
org.hamcrest.CoreMatchers.sameInstance(T)=тот же самый объект, что и '{0}'
#Original text = 
org.hamcrest.CoreMatchers.startsWith(java.lang.String)=строка, начинающаяся '{0}' 
#Original text = 
org.hamcrest.CoreMatchers.startsWithIgnoringCase(java.lang.String)=строка, начинающаяся '{0}', без учета регистра
#Original text = 
org.hamcrest.CoreMatchers.theInstance(T)=тот же самый объект, что и '{0}'
#Original text = 
org.hamcrest.CoreMatchers.anyOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=значение, соответствующее любому из: {0}
#Original text = 
org.hamcrest.CoreMatchers.anyOf(org.hamcrest.Matcher<?superT>[])=значение, соответствующее любому из: {0}

######################## org.hamcrest.beans.HasProperty #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.beans.HasProperty.hasProperty(java.lang.String)=Есть поле/свойство '{0}'

######################## org.hamcrest.beans.HasPropertyWithValue #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.beans.HasPropertyWithValue.hasProperty(java.lang.String,org.hamcrest.Matcher<?>)=поле/свойство '{0}', значение которого соответствует '{1}'
#Original text = 
org.hamcrest.beans.HasPropertyWithValue.hasPropertyAtPath(java.lang.String,org.hamcrest.Matcher<T>)=поле/свойство '{0}', значение которого соответствует '{1}'

######################## org.hamcrest.beans.SamePropertyValuesAs #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.beans.SamePropertyValuesAs.samePropertyValuesAs(B,java.lang.String[])=значения полей/свойств {1} равны значениям перечисленных полей/свойств объекта '{0}'

######################## org.hamcrest.collection.ArrayMatching #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContaining(E[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContaining(java.util.List<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContaining(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContainingInAnyOrder(E[])=Массив состоит из {0}
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContainingInAnyOrder(java.util.Collection<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, соответствующих {0}
#Original text = 
org.hamcrest.collection.ArrayMatching.arrayContainingInAnyOrder(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, соответствующих {0}
#Original text = 
org.hamcrest.collection.ArrayMatching.hasItemInArray(T)=Массив включает элемент '{0}'
#Original text = 
org.hamcrest.collection.ArrayMatching.hasItemInArray(org.hamcrest.Matcher<?superT>)=Массив включает элемент, соответствующий '{0}'

######################## org.hamcrest.collection.IsArray #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArray.array(org.hamcrest.Matcher<?superT>[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке

######################## org.hamcrest.collection.IsArrayContainingInAnyOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArrayContainingInAnyOrder.arrayContainingInAnyOrder(E[])=Массив состоит из {0}
#Original text = 
org.hamcrest.collection.IsArrayContainingInAnyOrder.arrayContainingInAnyOrder(java.util.Collection<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, соответствующих {0}
#Original text = 
org.hamcrest.collection.IsArrayContainingInAnyOrder.arrayContainingInAnyOrder(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, соответствующих {0}

######################## org.hamcrest.collection.IsArrayContainingInOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArrayContainingInOrder.arrayContaining(E[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsArrayContainingInOrder.arrayContaining(java.util.List<org.hamcrest.Matcher<?superE>>)=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsArrayContainingInOrder.arrayContaining(org.hamcrest.Matcher<?superE>[])=Массив состоит из элементов, которые соответствуют: {0}. В строгом порядке

######################## org.hamcrest.collection.IsArrayWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsArrayWithSize.arrayWithSize(int)=Размер массива {0}
#Original text = 
org.hamcrest.collection.IsArrayWithSize.arrayWithSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=Размер массива соответствует '{0}'
#Original text = 
org.hamcrest.collection.IsArrayWithSize.emptyArray()=Пустой массив

######################## org.hamcrest.collection.IsCollectionWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsCollectionWithSize.hasSize(int)=Размер коллекции {0}
#Original text = 
org.hamcrest.collection.IsCollectionWithSize.hasSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=Размер коллекции соответствует '{0}'

######################## org.hamcrest.collection.IsEmptyCollection #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsEmptyCollection.empty()=Пустая коллекция
#Original text = 
org.hamcrest.collection.IsEmptyCollection.emptyCollectionOf(java.lang.Class<E>)=Пустая коллекция элементов класса '{0}'

######################## org.hamcrest.collection.IsEmptyIterable #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsEmptyIterable.emptyIterable()=Пустое перечислимое
#Original text = 
org.hamcrest.collection.IsEmptyIterable.emptyIterableOf(java.lang.Class<E>)=Пустое перечислимое элементов класса '{0}'

######################## org.hamcrest.collection.IsIn #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIn.in(T[])=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.in(java.util.Collection<T>)=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.isIn(T[])=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.isIn(java.util.Collection<T>)=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.isOneOf(T[])=Входит в состав {0}
#Original text = 
org.hamcrest.collection.IsIn.oneOf(T[])=Входит в состав {0}

######################## org.hamcrest.collection.IsIterableContainingInAnyOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableContainingInAnyOrder.containsInAnyOrder(T[])=состоит из: {0}
#Original text = 
org.hamcrest.collection.IsIterableContainingInAnyOrder.containsInAnyOrder(java.util.Collection<org.hamcrest.Matcher<?superT>>)=состоит из элементов, соответствующих: {0}
#Original text = 
org.hamcrest.collection.IsIterableContainingInAnyOrder.containsInAnyOrder(org.hamcrest.Matcher<?superT>[])=состоит из элементов, соответствующих: {0}

######################## org.hamcrest.collection.IsIterableContainingInOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(E[])=состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(java.util.List<org.hamcrest.Matcher<?superE>>)=состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(org.hamcrest.Matcher<?superE>)=состоит из элементов, которые соответствуют: {0}. В строгом порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInOrder.contains(org.hamcrest.Matcher<?superE>[])=состоит из элементов, которые соответствуют: {0}. В строгом порядке

######################## org.hamcrest.collection.IsIterableContainingInRelativeOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableContainingInRelativeOrder.containsInRelativeOrder(E[])=включает элементы: {0}. В указанном порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInRelativeOrder.containsInRelativeOrder(java.util.List<org.hamcrest.Matcher<?superE>>)=включает элементы, соответствующие: {0}. В указанном порядке
#Original text = 
org.hamcrest.collection.IsIterableContainingInRelativeOrder.containsInRelativeOrder(org.hamcrest.Matcher<?superE>[])=включает элементы, соответствующие: {0}. В указанном порядке

######################## org.hamcrest.collection.IsIterableWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsIterableWithSize.iterableWithSize(int)=размер {0}
#Original text = 
org.hamcrest.collection.IsIterableWithSize.iterableWithSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=размер соответствует '{0}'

######################## org.hamcrest.collection.IsMapContaining #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsMapContaining.hasEntry(K,V)=есть запись, ключ '{0}', значение '{1}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasEntry(org.hamcrest.Matcher<?superK>,org.hamcrest.Matcher<?superV>)=есть запись, ключ соответствует '{0}', значение соответствует '{1}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasKey(K)=есть ключ '{0}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasKey(org.hamcrest.Matcher<?superK>)=есть ключ, соответствующий '{0}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasValue(V)=есть значение '{0}'
#Original text = 
org.hamcrest.collection.IsMapContaining.hasValue(org.hamcrest.Matcher<?superV>)=есть значение, соответствующее '{0}'

######################## org.hamcrest.collection.IsMapWithSize #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.collection.IsMapWithSize.aMapWithSize(int)=размер {0}
#Original text = 
org.hamcrest.collection.IsMapWithSize.aMapWithSize(org.hamcrest.Matcher<?superjava.lang.Integer>)=размер соответствует '{0}'
#Original text = 
org.hamcrest.collection.IsMapWithSize.anEmptyMap()=пустой Map<>

######################## org.hamcrest.comparator.ComparatorMatcherBuilder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.comparesEqualTo(T)={0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.greaterThan(T)=больше чем {0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.greaterThanOrEqualTo(T)=не меньше чем {0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.lessThan(T)=меньше чем {0}
#Original text = 
org.hamcrest.comparator.ComparatorMatcherBuilder.lessThanOrEqualTo(T)=не более чем {0}

######################## org.hamcrest.core.AllOf #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.AllOf.allOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=все перечисленное: {0}
#Original text = 
org.hamcrest.core.AllOf.allOf(org.hamcrest.Matcher<?superT>[])=все перечисленное: {0}

######################## org.hamcrest.core.AnyOf #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.AnyOf.anyOf(java.lang.Iterable<org.hamcrest.Matcher<?superT>>)=
#Original text = 
org.hamcrest.core.AnyOf.anyOf(org.hamcrest.Matcher<?superT>[])=

######################## org.hamcrest.core.CombinableMatcher #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.CombinableMatcher.and(org.hamcrest.Matcher<?superT>)=и {0}
#Original text = 
org.hamcrest.core.CombinableMatcher.or(org.hamcrest.Matcher<?superT>)=либо {0}

######################## org.hamcrest.core.CombinableMatcher$CombinableBothMatcher #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.CombinableMatcher$CombinableBothMatcher.and(org.hamcrest.Matcher<?superX>)=и {0}

######################## org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher.or(org.hamcrest.Matcher<?superX>)=либо {0}

######################## org.hamcrest.core.Every #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.Every.everyItem(org.hamcrest.Matcher<U>)=каждый элемент соответствует {0}

######################## org.hamcrest.core.Is #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.Is.is(T)={0}
#Original text = 
org.hamcrest.core.Is.is(org.hamcrest.Matcher<T>)={0}
#Original text = 
org.hamcrest.core.Is.isA(java.lang.Class<?>)=объект класса '{0}'

######################## org.hamcrest.core.IsAnything #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsAnything.anything()=<ЛЮБОЕ ЗНАЧЕНИЕ>
#Original text = 
org.hamcrest.core.IsAnything.anything(java.lang.String)=любой(ое): {0}

######################## org.hamcrest.core.IsCollectionContaining #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItem(T)=коллекция содержит элемент '{0}'
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItem(org.hamcrest.Matcher<?superT>)=коллекция содержит элемент, который соответствует '{0}'
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItems(T[])=коллекция содержит элементы: {0}
#Original text = 
org.hamcrest.core.IsCollectionContaining.hasItems(org.hamcrest.Matcher<?superT>[])=коллекция содержит элементы, которые соответствуют: {0}

######################## org.hamcrest.core.IsEqual #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsEqual.equalTo(T)=равно '{0}'
#Original text = 
org.hamcrest.core.IsEqual.equalToObject(java.lang.Object)=равно объекту '{0}'

######################## org.hamcrest.core.IsInstanceOf #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsInstanceOf.any(java.lang.Class<T>)=объект '{0}'
#Original text = 
org.hamcrest.core.IsInstanceOf.instanceOf(java.lang.Class<?>)=объект '{0}'

######################## org.hamcrest.core.IsIterableContaining #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItem(T)=содержит элемент '{0}'
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItem(org.hamcrest.Matcher<?superT>)=содержит элемент, который соответствует '{0}'
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItems(T[])=содержит элементы: {0}
#Original text = 
org.hamcrest.core.IsIterableContaining.hasItems(org.hamcrest.Matcher<?superT>[])=содержит элементы, которые соответствуют: {0}

######################## org.hamcrest.core.IsNot #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsNot.not(T)=не '{0}'
#Original text = 
org.hamcrest.core.IsNot.not(org.hamcrest.Matcher<T>)=не '{0}'

######################## org.hamcrest.core.IsNull #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsNull.notNullValue()=отличное от null значение
#Original text = 
org.hamcrest.core.IsNull.notNullValue(java.lang.Class<T>)=отличное от null значение класса '{0}'
#Original text = 
org.hamcrest.core.IsNull.nullValue()=null
#Original text = 
org.hamcrest.core.IsNull.nullValue(java.lang.Class<T>)=null-значение класса '{0}'

######################## org.hamcrest.core.IsSame #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.IsSame.sameInstance(T)=тот же самый объект, что и '{0}'
#Original text = 
org.hamcrest.core.IsSame.theInstance(T)=тот же самый объект, что и '{0}'

######################## org.hamcrest.core.StringContains #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringContains.containsString(java.lang.String)=содержит строку '{0}'
#Original text = 
org.hamcrest.core.StringContains.containsStringIgnoringCase(java.lang.String)=содержит строку '{0}' без учета регистра

######################## org.hamcrest.core.StringEndsWith #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringEndsWith.endsWith(java.lang.String)=строка, заканчивающаяся '{0}'
#Original text = 
org.hamcrest.core.StringEndsWith.endsWithIgnoringCase(java.lang.String)=строка, заканчивающаяся '{0}', без учета регистра

######################## org.hamcrest.core.StringRegularExpression #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringRegularExpression.matchesRegex(java.lang.String)=строка соответствует регулярному выражению '{0}'
#Original text = 
org.hamcrest.core.StringRegularExpression.matchesRegex(java.util.regex.Pattern)=строка соответствует регулярному выражению '{0}'

######################## org.hamcrest.core.StringStartsWith #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.core.StringStartsWith.startsWith(java.lang.String)=строка, начинающаяся '{0}' 
#Original text = 
org.hamcrest.core.StringStartsWith.startsWithIgnoringCase(java.lang.String)=строка, начинающаяся '{0}', без учета регистра

######################## org.hamcrest.io.FileMatchers #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.io.FileMatchers.aFileNamed(org.hamcrest.Matcher<java.lang.String>)=имя файла соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithAbsolutePath(org.hamcrest.Matcher<java.lang.String>)=абсолютный путь к файлу соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithCanonicalPath(org.hamcrest.Matcher<java.lang.String>)=путь к файлу соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithSize(long)=Размер файла {0}
#Original text = 
org.hamcrest.io.FileMatchers.aFileWithSize(org.hamcrest.Matcher<java.lang.Long>)=Размер файла соответствует '{0}'
#Original text = 
org.hamcrest.io.FileMatchers.aReadableFile()=Файл можно читать
#Original text = 
org.hamcrest.io.FileMatchers.aWritableFile()=Файл можно редактировать
#Original text = 
org.hamcrest.io.FileMatchers.anExistingDirectory()=Существующая директория
#Original text = 
org.hamcrest.io.FileMatchers.anExistingFile()=Существующий файл
#Original text = 
org.hamcrest.io.FileMatchers.anExistingFileOrDirectory()=Существующий файл или директория

######################## org.hamcrest.number.BigDecimalCloseTo #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.BigDecimalCloseTo.closeTo(java.math.BigDecimal,java.math.BigDecimal)=Число, близкое к {0} c допустимой погрешностью {1}

######################## org.hamcrest.number.IsCloseTo #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.IsCloseTo.closeTo(double,double)=Число, близкое к {0} c допустимой погрешностью {1}

######################## org.hamcrest.number.IsNaN #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.IsNaN.notANumber()=Не является числом

######################## org.hamcrest.number.OrderingComparison #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.number.OrderingComparison.comparesEqualTo(T)={0}
#Original text = 
org.hamcrest.number.OrderingComparison.greaterThan(T)=больше чем {0}
#Original text = 
org.hamcrest.number.OrderingComparison.greaterThanOrEqualTo(T)=не меньше чем {0}
#Original text = 
org.hamcrest.number.OrderingComparison.lessThan(T)=меньше чем {0}
#Original text = 
org.hamcrest.number.OrderingComparison.lessThanOrEqualTo(T)=не более чем {0}

######################## org.hamcrest.object.HasToString #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.object.HasToString.hasToString(java.lang.String)=текстовое представление объекта '{0}'
#Original text = 
org.hamcrest.object.HasToString.hasToString(org.hamcrest.Matcher<?superjava.lang.String>)=текстовое представление объекта соответствует '{0}'

######################## org.hamcrest.object.IsCompatibleType #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.object.IsCompatibleType.typeCompatibleWith(java.lang.Class<T>)=тип совместим с '{0}'

######################## org.hamcrest.object.IsEventFrom #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.object.IsEventFrom.eventFrom(java.lang.Class<?extendsjava.util.EventObject>,java.lang.Object)=событие '{0}', источник '{1}'
#Original text = 
org.hamcrest.object.IsEventFrom.eventFrom(java.lang.Object)=источник события '{1}'

######################## org.hamcrest.text.CharSequenceLength #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.CharSequenceLength.hasLength(int)=длина '{0}'
#Original text = 
org.hamcrest.text.CharSequenceLength.hasLength(org.hamcrest.Matcher<?superjava.lang.Integer>)=длина соответствует '{0}'

######################## org.hamcrest.text.IsBlankString #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsBlankString.blankOrNullString()=пустая строка или null
#Original text = 
org.hamcrest.text.IsBlankString.blankString()=пустая строка

######################## org.hamcrest.text.IsEmptyString #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsEmptyString.emptyOrNullString()=пустая строка или null
#Original text = 
org.hamcrest.text.IsEmptyString.emptyString()=пустая строка
#Original text = 
org.hamcrest.text.IsEmptyString.isEmptyOrNullString()=пустая строка или null
#Original text = 
org.hamcrest.text.IsEmptyString.isEmptyString()=пустая строка

######################## org.hamcrest.text.IsEqualCompressingWhiteSpace #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsEqualCompressingWhiteSpace.equalToCompressingWhiteSpace(java.lang.String)=строка равна '{0}' без учета пробелов
#Original text = 
org.hamcrest.text.IsEqualCompressingWhiteSpace.equalToIgnoringWhiteSpace(java.lang.String)=строка равна '{0}' без учета пробелов

######################## org.hamcrest.text.IsEqualIgnoringCase #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.IsEqualIgnoringCase.equalToIgnoringCase(java.lang.String)=строка равна '{0}' без учета регистра

######################## org.hamcrest.text.MatchesPattern #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.MatchesPattern.matchesPattern(java.lang.String)=строка соответствует регулярному выражению '{0}'
#Original text = 
org.hamcrest.text.MatchesPattern.matchesPattern(java.util.regex.Pattern)=строка соответствует регулярному выражению '{0}'

######################## org.hamcrest.text.StringContainsInOrder #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.text.StringContainsInOrder.stringContainsInOrder(java.lang.Iterable<java.lang.String>)=содержит строки: {0}. В указанном порядке
#Original text = 
org.hamcrest.text.StringContainsInOrder.stringContainsInOrder(java.lang.String[])=содержит строки: {0}. В указанном порядке

######################## org.hamcrest.xml.HasXPath #
#__________________________________ Methods _______________________________________
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String)=есть объект, найденный по xpath '{0}'
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String,javax.xml.namespace.NamespaceContext)=есть объект, найденный по xpath '{0}'
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String,javax.xml.namespace.NamespaceContext,org.hamcrest.Matcher<java.lang.String>)=объект, найденный по xpath '{0}', соответствует {2}
#Original text = 
org.hamcrest.xml.HasXPath.hasXPath(java.lang.String,org.hamcrest.Matcher<java.lang.String>)=объект, найденный по xpath '{0}', соответствует {1}