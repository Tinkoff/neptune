plugins {
    id "io.freefair.aspectj.post-compile-weaving" version "5.3.3.3"
}

test {
    useTestNG()
}

java {
    withJavadocJar()
    withSourcesJar()
}

task generateDefaultBundle(type: JavaExec)  {
    classpath sourceSets.main.runtimeClasspath
    main = "ru.tinkoff.qa.neptune.core.api.localization.ResourceBundleGenerator"
    args Locale.US.toString(),
            "$projectDir/src/main/resources",
            "false",
            "spring.assertions"
}

task generateBundle(type: JavaExec)  {
    dependsOn generateDefaultBundle
    classpath sourceSets.main.runtimeClasspath
    main = "ru.tinkoff.qa.neptune.core.api.localization.ResourceBundleGenerator"
    args "ru_RU",
            "$projectDir/src/main/resources",
            "false",
            "spring.web.testclient"
}

processResources {
    doLast {
        generateBundle.exec()
    }
}

dependencies {
    api project(':core.api')
    api project(':neptune-spring-boot-starter')
    inpath(project(":core.api")) {
        transitive = false
    }
    api(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion) {
        exclude(group: 'org.springframework', module: 'spring-test')
    }
    inpath (group: 'org.springframework', name: 'spring-test', version: springVersion) {
        transitive = false
    }
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    api group: 'org.springframework', name: 'spring-web', version: springVersion
    api group: 'org.springframework', name: 'spring-webmvc', version: springVersion
    testImplementation  group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockitoVersion

    compileClasspath('javax.websocket:javax.websocket-api:1.1')
    compileClasspath('javax.websocket:javax.websocket-client-api:1.1')
    compileClasspath('org.mortbay.jetty:jsp-api-2.0:6.1.26')
    compileClasspath('org.apache.ant:ant:1.10.11')
    compileClasspath('io.netty:netty-buffer:4.1.72.Final')
    compileClasspath('io.projectreactor.tools:blockhound:1.0.6.RELEASE')
    compileClasspath(group: 'org.springframework', name: 'spring-orm', version: springVersion)
    compileClasspath(group: 'org.springframework', name: 'spring-tx', version: springVersion)
    compileClasspath(group: 'org.springframework', name: 'spring-webflux', version: springVersion)
    compileClasspath(group: 'org.springframework', name: 'spring-websocket', version: springVersion)
    compileClasspath('jakarta.activation:jakarta.activation-api:2.0.1')
    compileClasspath('jakarta.el:jakarta.el-api:4.0.0')
    compileClasspath('jakarta.inject:jakarta.inject-api:2.0.1.MR')
    compileClasspath('jakarta.servlet:jakarta.servlet-api:5.0.0')
    compileClasspath('jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.0.0')
    compileClasspath('jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.0')
    compileClasspath('jakarta.xml.bind:jakarta.xml.bind-api:3.0.1')
    compileClasspath('jakarta.websocket:jakarta.websocket-api:2.0.0')
    compileClasspath('junit:junit:4.13.2')
    compileClasspath('org.apache.tomcat.embed:tomcat-embed-core:10.0.14')
    compileClasspath(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5Version)
    compileClasspath('org.testng:testng:7.4.0')
    compileClasspath('org.codehaus.groovy:groovy:3.0.8')
    compileClasspath('org.hamcrest:hamcrest:2.2')
    compileClasspath('net.sourceforge.htmlunit:htmlunit:2.56].0')
    compileClasspath('org.seleniumhq.selenium:htmlunit-driver:2.55.0') {
        exclude group: "net.bytebuddy", module: "byte-buddy"
    }
    compileClasspath('org.xmlunit:xmlunit-matchers:2.8.3')
    compileClasspath('org.skyscreamer:jsonassert:1.5.0')
    compileClasspath('com.jayway.jsonpath:json-path:2.6.0')
    compileClasspath('org.jetbrains.kotlin:kotlin-reflect:1.6.0')
    compileClasspath('org.jetbrains.kotlin:kotlin-stdlib:1.6.0')
    compileClasspath('io.projectreactor:reactor-test:3.4.12')
    compileClasspath('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt')
    compileClasspath('org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.5.2-native-mt')

    testImplementation('io.projectreactor.tools:blockhound:1.0.6.RELEASE')
    testImplementation('io.projectreactor:reactor-test:3.4.12')
    testImplementation('org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.5.2-native-mt')
    testImplementation(group: 'org.springframework', name: 'spring-webflux', version: springVersion)
    testCompileClasspath(group: 'org.springframework', name: 'spring-test', version: springVersion)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'spring.web.testclient'
            from components.java
            repositories {
                maven {
                    credentials(PasswordCredentials)
                    url = 'https://nexus-new.tcsbank.ru/repository/mvn-bigops-qa'
                }
            }
            pom {
                packaging = 'jar'
                name = 'spring.web.testclient'
                version = version
                url = 'https://github.com/TinkoffCreditSystems/neptune'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'TikhomirovSergey'
                        name = 'Sergey Tikhomirov'
                        email = 'tichomirovsergey@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:ssh://git@github.com:TinkoffCreditSystems/neptune.git'
                    developerConnection = 'scm:git:ssh://git@github.com:TinkoffCreditSystems/neptune.git'
                    url = 'https://github.com/TinkoffCreditSystems/neptune'
                }
            }
        }
    }
}

javadoc {
    destinationDir = file("${buildDir}/../../../neptune.documentation/javadocs/$project.name")

    title = "Neptune Spring WebTestClient Integration API. v$globalVersion"
    options.author true
    options.links 'http://download.oracle.com/javase/9/docs/api/'
    options.addStringOption 'Xdoclint:none', '-quiet'
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.bottom = "Copyright &copy; 2021 <a href=\"https://www.tinkoff.ru/software/\">Tinkoff.ru Development</a>."
    options.addBooleanOption('html5', true)
}